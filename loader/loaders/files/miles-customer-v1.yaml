openapi: 3.0.1
info:
  title: miles-customer
  description: "This service is used to retrieve information about customers, fleet\
    \ managers,\n\t\t\tdrivers & legal entity groups.\n\t\t\tIt can manage all things\
    \ related to UBO and its documents.\n\t\t\tCustomers can be created, updated and\
    \ links to them can be removed.\n\t\t\tThe service provides filters needed to\
    \ manage all these objects."
  contact:
    url: https://www.sofico.global
  license:
    name: Sofico
    url: https://www.sofico.global
  version: 1.128.0
  x-logo:
    url: https://sofico.global/app/themes/sage/public/images/general/logo-sofico.cec1ce.svg
    altText: Sofico logo
paths:
  /customers/{customer_id}/address-histories:
    post:
      summary: Add address history
      description: This endpoint creates an address history record for a customer.
      operationId: addAddressHistory
      parameters:
      - name: customer_id
        in: path
        description: ID of the customer
        required: true
        schema:
          type: string
        example: 2147483728
      requestBody:
        description: Data required to add a contact to a customer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressHistoryRequest'
        required: true
      responses:
        "404":
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarningsInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressHistoryResponse'
      security:
      - Roles:
        - dealer_manager
        - dealer_salesperson
        - broker_manager
        - broker_salesperson
  /customers/{customer_id}/bank-accounts:
    get:
      summary: Get customer bank accounts
      description: This endpoint retrieves bank accounts related to a customer.
      operationId: getCustomerBankAccounts
      parameters:
      - name: customer_id
        in: path
        description: The ID of the customer
        required: true
        schema:
          type: string
      - name: count
        in: query
        description: Maximum number of bank accounts to be displayed
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: offset
        in: query
        description: Number of bank accounts to skip before selecting customer
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: sort_by
        in: query
        description: Sorting to be applied on the results list
        schema:
          type: string
      responses:
        "404":
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindBankAccountsResponse'
      security:
      - Roles:
        - dealer_manager
        - dealer_salesperson
        - broker_manager
        - broker_salesperson
    post:
      summary: Add a bank account
      description: Register a new bank account to a customer
      operationId: addBankAccount
      parameters:
      - name: customer_id
        in: path
        description: ID of the customer owns bank accounts
        required: true
        schema:
          type: string
        example: 2147483728
      requestBody:
        description: Data required to add a bank account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccountRequest'
      responses:
        "404":
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarningsInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBankAccountsResponse'
      security:
      - Roles:
        - dealer_manager
        - dealer_salesperson
        - broker_manager
        - broker_salesperson
  /customers/{customer_id}/payment-preferences:
    get:
      summary: Get customer payment preferences
      description: Get payment preferences for a given customer
      operationId: getCustomerPaymentPreferences
      parameters:
      - name: customer_id
        in: path
        description: The ID of the customer
        required: true
        schema:
          type: string
      - name: count
        in: query
        description: Maximum number of payment preferences to be displayed
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: offset
        in: query
        description: Number of payment preferences to skip
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: sort_by
        in: query
        description: Sorting to be applied on the results list
        schema:
          type: string
      responses:
        "404":
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindPaymentPreferencesResponse'
      security:
      - Roles:
        - dealer_manager
        - dealer_salesperson
        - broker_manager
        - broker_salesperson
    post:
      summary: Add payment preference
      description: Add payment preference to a customer
      operationId: addPaymentPreferences
      parameters:
      - name: customer_id
        in: path
        description: ID of the customer owns bank accounts
        required: true
        schema:
          type: string
        example: 2147483728
      requestBody:
        description: Data required to add a payment preference
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentPreferenceRequest'
      responses:
        "404":
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarningsInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPaymentPreferencesResponse'
      security:
      - Roles:
        - dealer_manager
        - dealer_salesperson
        - broker_manager
        - broker_salesperson
  /customers/{customer_id}/sites:
    post:
      summary: Add a site for a customer
      description: This endpoint creates a site for a customer with the given customer
        ID.
      operationId: addSite
      parameters:
      - name: customer_id
        in: path
        description: The ID of the customer
        required: true
        schema:
          type: string
        example: 1000001
      - name: ignore_warnings
        in: query
        description: |-
          Indicates whether warnings should be ignored.
          If set to true, interactive warnings will be ignored.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Data required to create a new site
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSiteRequest'
        required: true
      responses:
        "404":
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarningsInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
      security:
      - Roles:
        - mobility_manager
        - account_manager
  /customers/{customer_id}/ubos/{deposit_id}/documents:
    get:
      summary: Find documents attached to an UBO
      description: This endpoint retrieves a list of all documents attached to an
        UBO.
      operationId: findAttachedUBODocuments
      parameters:
      - name: customer_id
        in: path
        description: ID of the customer
        required: true
        schema:
          type: string
      - name: deposit_id
        in: path
        description: ID of the UBO
        required: true
        schema:
          type: string
      - name: document_template_id
        in: query
        description: ID(s) of the document template(s)
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "404":
          description: |-
            - Customer not found
            - Deposit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindAttachedUBODocumentsResponse'
      security:
      - Roles:
        - mobility_manager
        - mobility_manager_assistant
    post:
      summary: Attach document
      description: This endpoint attaches a document to a person
      operationId: attachDocument
      parameters:
      - name: customer_id
        in: path
        description: ID of the customer
        required: true
        schema:
          type: string
      - name: deposit_id
        in: path
        description: ID of the UBO
        required: true
        schema:
          type: string
      requestBody:
        description: File to attach to the person
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttachedDocumentRequest'
        required: true
      responses:
        "404":
          description: |-
            - Customer not found
            - Deposit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarningsInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachedDocument'
      security:
      - Roles:
        - mobility_manager
        - mobility_manager_assistant
  /contact/current/consents:
    get:
      summary: Get consents
      description: This endpoint retrieves the currently valid consents for the authenticated
        user. Consents that have been withdrawn have an opt-out date in the past and
        are not returned.
      operationId: getConsentsForUser
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindConsentResponse'
      security:
      - Roles:
        - user
    put:
      summary: Withdraw consents
      description: This endpoint withdraws consents for the authenticated user by
        setting the opt out date to the current date.
      operationId: withdrawConsentsForUser
      requestBody:
        description: Data required to withdraw a consent
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawConsentRequest'
        required: true
      responses:
        "404":
          description: No consents found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarningsInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentResponse'
      security:
      - Roles:
        - user
        - retail_customer
    post:
      summary: Register consents
      description: This endpoint registers a consent for data processing activities
        to the authenticated user.
      operationId: createConsentsForUser
      requestBody:
        description: Data required to create a consent
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConsentRequest'
        required: true
      responses:
        "400":
          description: Invalid data processing enumeration ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarningsInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentResponse'
      security:
      - Roles:
        - user
        - retail_customer
  /customers/{customer_id}/contacts:
    get:
      summary: Find contacts for a customer
      description: This endpoint retrieves a list of contacts for the given customer.
      operationId: findContacts
      parameters:
      - name: customer_id
        in: path
        description: The ID of the customer
        required: true
        schema:
          type: string
        example: 2147483728
      - name: contact_role_id
        in: query
        description: The ID(s) of the contact role(s)
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            example: "100001"
      - name: official_registration
        in: query
        description: The official registration of the contact
        schema:
          type: string
        example: 36468213B
      responses:
        "404":
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindContactsResponse'
      security:
      - Roles:
        - dealer_salesperson
        - dealer_manager
        - broker_salesperson
        - broker_manager
    post:
      summary: Create contact for a customer
      description: |-
        This endpoint creates a new contact for a customer.
        The creation is possible only if the given customer belongs to the dealer/broker portfolio of the authenticated user and if the provided contact roles are allowed.
      operationId: createContact
      parameters:
      - name: customer_id
        in: path
        description: ID of the customer
        required: true
        schema:
          type: string
        example: 2147483728
      requestBody:
        description: Data required to create a contact
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContactRequest'
        required: true
      responses:
        "404":
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarningsInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactResponse'
      security:
      - Roles:
        - dealer_salesperson
        - dealer_manager
        - broker_salesperson
        - broker_manager
  /customers:
    get:
      summary: Find customers
      description: "This endpoint retrieves a list of customers.It can be used with\
        \ a search query using the properties that can be found in the description\
        \ of the query parameter search_query.It accepts multiple keywords separated\
        \ by spaces, except for queries with only one character or the !, % and ^\
        \ wildcards.An example for a search query is '+31092 Smith Sofic': a search\
        \ will be performed to find a match or partial match for '+31092' or 'Smith'\
        \ or 'Sofic' on the attributes."
      operationId: findCustomers
      parameters:
      - name: count
        in: query
        description: The maximum number of elements to be returned
        schema:
          minimum: 0
          type: integer
          format: int32
        example: false
      - name: offset
        in: query
        description: The number of elements to skip before returning the requested
          list of elements
        schema:
          minimum: 0
          type: integer
          format: int32
        example: false
      - name: sort_by
        in: query
        description: "Order clause in which the elements will be returned, deprecated\
          \ since 1.221.0 on 2023-02-22 in favor of a list of sortBy"
        deprecated: true
        schema:
          $ref: '#/components/schemas/SortBy'
      - name: sorting
        in: query
        description: List of order clauses in which the elements will be returned
        schema:
          type: array
          items:
            type: string
      - name: customer_id
        in: query
        description: ID(s) of the customer(s)
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            example: "100001"
        x-miles-extra-description:
          Will be ignored when using a searchQuery: "false"
      - name: broker_company_id
        in: query
        description: ID(s) of the broker company(ies)
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            example: "500000"
        x-miles-extra-description:
          Will be ignored when using a searchQuery: "true"
      - name: only_managed_customers
        in: query
        description: Indicates whether to filter by managed customers
        schema:
          type: boolean
        example: false
        x-miles-extra-description:
          Will be ignored when using a searchQuery: "false"
      - name: reference
        in: query
        description: Indicates whether to filter by reference of the customer
        schema:
          type: string
        example: 100001
        x-miles-extra-description:
          Will be ignored when using a searchQuery: "true"
      - name: trading_name
        in: query
        description: Indicates whether to filter by trading name of the customer
        schema:
          type: string
        example: Sofico Finance
        x-miles-extra-description:
          Will be ignored when using a searchQuery: "true"
      - name: legal_entity_group_id
        in: query
        description: ID(s) of the legal entity group(s)
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            example: "2051"
        x-miles-extra-description:
          Will be ignored when using a searchQuery: "true"
      - name: official_registration
        in: query
        description: Indicates whether to filter by a list of official registrations
          of the customer
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            example: "41199698"
        x-miles-extra-description:
          Will be ignored when using a searchQuery: "true"
      - name: birth_date
        in: query
        description: Indicates whether to filter by the birth date (exact match) of
          the person linked to the customer
        schema:
          type: string
          format: date
        x-miles-extra-description:
          Will be ignored when using a searchQuery: "true"
      - name: last_name
        in: query
        description: Indicates whether to filter by the last name of the person linked
          to the customer
        schema:
          type: string
        example: Smith
        x-miles-extra-description:
          Will be ignored when using a searchQuery: "true"
      - name: first_name
        in: query
        description: Indicates whether to filter by the first name of the person linked
          to the customer
        schema:
          type: string
        example: John
        x-miles-extra-description:
          Will be ignored when using a searchQuery: "true"
      - name: postal_code
        in: query
        description: Indicates whether to filter by the postal code (exact match)
          of the person linked to the customer
        schema:
          type: string
        example: 9000
        x-miles-extra-description:
          Will be ignored when using a searchQuery: "true"
      - name: city
        in: query
        description: Indicates whether to filter by the city of the person linked
          to the customer
        schema:
          type: string
        example: Ghent
        x-miles-extra-description:
          Will be ignored when using a searchQuery: "true"
      - name: email
        in: query
        description: A list of email addresses of the person (exact match) linked
          to the customer
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            example: john.doe@example.com
        x-miles-extra-description:
          Will be ignored when using a searchQuery: "true"
      - name: search_query
        in: query
        description: Note that this will only work for Postgres ODS.By filling in
          this property you can do a back-end search.
        schema:
          maxLength: 2147483647
          minLength: 2
          type: string
        example: +324879
        x-miles-search:
          legalName: The legal name of the customer
          tradingName: The trading name of the customer
          firstName: The first name of the person linked to the customer
          lastName: The last name of the person linked to the customer
          e-mail: The emails linked to the customer
          phone number: The phone numbers linked to the customer
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindCustomersResponse'
      security:
      - Roles:
        - customer_support
        - account_manager
        - dealer_manager
        - dealer_salesperson
        - broker_manager
        - broker_salesperson
        - mobility_manager
    post:
      summary: Create a new customer
      description: "This endpoint creates a new customer of type individual, sole\
        \ trader or organisation. When creating a individual customer (legal entity\
        \ group ID 2050), you need to supply the individualPerson object."
      operationId: createCustomer
      parameters:
      - name: ignore_warnings
        in: query
        description: |-
          Indicates whether warnings should be ignored.
          If set to true, interactive warnings will be ignored.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Data required to create a new customer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerRequest'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarningsInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCustomerResponse'
      security:
      - Roles:
        - dealer_manager
        - dealer_salesperson
        - broker_manager
        - broker_salesperson
  /customers/{customer_id}/target-groups:
    get:
      summary: Get target groups
      description: This endpoint retrieves a list of target groups by the customer
        ID.
      operationId: getTargetGroups
      parameters:
      - name: customer_id
        in: path
        description: The ID of the customer linked to the target group(s)
        required: true
        schema:
          type: string
      responses:
        "404":
          description: Target group(s) not found for this customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTargetGroupsResponse'
      security:
      - Roles:
        - dealer_manager
        - dealer_salesperson
        - broker_manager
        - broker_salesperson
    post:
      summary: Create target groups
      description: This endpoint creates a target group for a customer by ID.
      operationId: createTargetGroups
      parameters:
      - name: customer_id
        in: path
        description: The ID of the customer that will be linked to the new target
          group(s)
        required: true
        schema:
          type: string
        example: 100001
      requestBody:
        description: Data required to create the target group(s)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTargetGroupRequest'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarningsInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "204":
          description: No Content
      security:
      - Roles:
        - dealer_manager
        - dealer_salesperson
        - broker_manager
        - broker_salesperson
  /customers/{customer_id}/ubos:
    get:
      summary: Find UBOs
      description: This endpoint retrieves a list of UBOs for a customer.
      operationId: findUBOs
      parameters:
      - name: count
        in: query
        description: The maximum number of elements to be returned
        schema:
          minimum: 0
          type: integer
          format: int32
        example: false
      - name: offset
        in: query
        description: The number of elements to skip before returning the requested
          list of elements
        schema:
          minimum: 0
          type: integer
          format: int32
        example: false
      - name: sort_by
        in: query
        description: "List of order clauses in which the elements will be returned,\
          \ deprecated since 2022-09-06 and version 1.184.0 in favor of sorting"
        deprecated: true
        schema:
          type: array
          items:
            type: string
      - name: sorting
        in: query
        description: List of order clauses in which the elements will be returned
        schema:
          type: array
          items:
            type: string
      - name: customer_id
        in: path
        description: ID of the customer
        required: true
        schema:
          type: string
      - name: valid_from
        in: query
        description: Valid from date of the UBO
        schema:
          type: string
          format: date
      - name: valid_to
        in: query
        description: Valid to date of the UBO
        schema:
          type: string
          format: date
      - name: official_registration
        in: query
        description: Indicates whether to filter by a list of official registrations
          of the person
        schema:
          type: string
        example: 36468213B
      responses:
        "404":
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindUBOsResponse'
      security:
      - Roles:
        - mobility_manager
        - mobility_manager_assistant
        - dealer_manager
        - dealer_salesperson
        - broker_manager
        - broker_salesperson
    post:
      summary: Create UBO
      description: This endpoint creates a new UBO.
      operationId: createUBO
      parameters:
      - name: customer_id
        in: path
        description: ID of the customer
        required: true
        schema:
          type: string
      requestBody:
        description: Data required to create an UBO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUBORequest'
        required: true
      responses:
        "404":
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarningsInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UBO'
      security:
      - Roles:
        - mobility_manager
        - mobility_manager_assistant
        - dealer_manager
        - dealer_salesperson
        - broker_manager
        - broker_salesperson
  /customers/{customer_id}/ubos/{deposit_id}/documents/{document_id}:
    get:
      summary: Get document attached to an UBO
      description: This endpoint downloads a document attached to an UBO.
      operationId: getAttachedUBODocument
      parameters:
      - name: customer_id
        in: path
        description: ID of the customer
        required: true
        schema:
          type: string
      - name: deposit_id
        in: path
        description: ID of the UBO
        required: true
        schema:
          type: string
      - name: document_id
        in: path
        description: ID of the document
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Response is a download
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          x-isResponseFile: "true"
        "404":
          description: |-
            - Customer not found
            - Deposit not found
            - Document not found
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
      security:
      - Roles:
        - mobility_manager
        - mobility_manager_assistant
    delete:
      summary: Delete document attached to quote
      description: This endpoint deletes a document attached to a quote.
      operationId: deleteAttachedUBODocument
      parameters:
      - name: customer_id
        in: path
        description: ID of the customer
        required: true
        schema:
          type: string
      - name: deposit_id
        in: path
        description: ID of the UBO
        required: true
        schema:
          type: string
      - name: document_id
        in: path
        description: ID of the document
        required: true
        schema:
          type: string
      responses:
        "404":
          description: |-
            - Customer not found
            - Deposit not found
            - Document not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarningsInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "204":
          description: No Content
      security:
      - Roles:
        - mobility_user
        - mobility_manager
        - mobility_manager_assistant
  /customers/{customer_id}/contacts/{contact_id}:
    put:
      summary: Update contact linked to a customer
      description: |-
        This endpoint updates a contact linked to a customer.
        The update is possible only if the given customer belongs to the dealer/broker portfolio of the authenticated user and if the contact to be updated belongs to this customer.
        Also, a check is done to verify whether the provided contact roles are allowed.
      operationId: updateContact
      parameters:
      - name: customer_id
        in: path
        description: ID of the customer
        required: true
        schema:
          type: string
        example: 2147483728
      - name: contact_id
        in: path
        description: ID of the contact
        required: true
        schema:
          type: string
        example: 2147483728
      requestBody:
        description: Data required to update a contact
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContactRequest'
        required: true
      responses:
        "404":
          description: |-
            - Customer not found
            - Contact not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarningsInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactResponse'
      security:
      - Roles:
        - dealer_salesperson
        - dealer_manager
        - broker_salesperson
        - broker_manager
    delete:
      summary: Delete contact linked to a customer
      description: |-
        This endpoint deletes a contact linked to a customer.
        The deletion is possible only if the given customer belongs to the dealer/broker portfolio of the authenticated user and if the contact to be deleted belongs to this customer.
      operationId: deleteContact
      parameters:
      - name: customer_id
        in: path
        description: ID of the customer
        required: true
        schema:
          type: string
        example: 2147483728
      - name: contact_id
        in: path
        description: ID of the contact
        required: true
        schema:
          type: string
        example: 2147483728
      responses:
        "404":
          description: |-
            - Customer not found
            - Contact not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarningsInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "204":
          description: No Content
      security:
      - Roles:
        - dealer_salesperson
        - dealer_manager
        - broker_salesperson
        - broker_manager
  /customers/{customer_id}/target-groups/{target_group_id}:
    delete:
      summary: Delete target group
      description: This endpoint deletes a target group of a customer by ID.
      operationId: deleteTargetGroup
      parameters:
      - name: customer_id
        in: path
        description: The ID of the customer
        required: true
        schema:
          type: string
        example: 100001
      - name: target_group_id
        in: path
        description: The target group ID of the target group to be removed.
        required: true
        schema:
          type: string
        example: 500005
      responses:
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarningsInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "204":
          description: No Content
      security:
      - Roles:
        - dealer_manager
        - dealer_salesperson
        - broker_manager
        - broker_salesperson
  /customers/{customer_id}/ubos/{deposit_id}:
    get:
      summary: Get UBO
      description: This endpoint retrieves an UBO for a customer.
      operationId: getUBO
      parameters:
      - name: customer_id
        in: path
        description: ID of the customer
        required: true
        schema:
          type: string
      - name: deposit_id
        in: path
        description: ID of the UBO
        required: true
        schema:
          type: string
      responses:
        "404":
          description: |-
            - Customer not found
            - Deposit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UBO'
      security:
      - Roles:
        - mobility_manager
        - mobility_manager_assistant
        - dealer_manager
        - dealer_salesperson
        - broker_manager
        - broker_salesperson
    put:
      summary: Update UBO
      description: This endpoint updates an UBO.
      operationId: updateUBO
      parameters:
      - name: customer_id
        in: path
        description: ID of the customer
        required: true
        schema:
          type: string
      - name: deposit_id
        in: path
        description: ID of the UBO
        required: true
        schema:
          type: string
      requestBody:
        description: Data required to update an UBO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUBORequest'
        required: true
      responses:
        "404":
          description: |-
            - Customer not found
            - Deposit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarningsInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UBO'
      security:
      - Roles:
        - mobility_manager
        - mobility_manager_assistant
        - dealer_manager
        - dealer_salesperson
        - broker_manager
        - broker_salesperson
    delete:
      summary: Delete UBO
      description: This endpoint sets the UBO's valid to date to the day before valid
        from.
      operationId: deleteUBO
      parameters:
      - name: customer_id
        in: path
        description: ID of the customer
        required: true
        schema:
          type: string
      - name: deposit_id
        in: path
        description: ID of the UBO
        required: true
        schema:
          type: string
      responses:
        "404":
          description: |-
            - Customer not found
            - Deposit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarningsInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "204":
          description: No Content
      security:
      - Roles:
        - mobility_manager
        - mobility_manager_assistant
        - dealer_manager
        - dealer_salesperson
        - broker_manager
        - broker_salesperson
  /account-managers:
    get:
      summary: Find account managers
      description: This endpoint retrieves a list of associated account managers.
      operationId: findAccountManagers
      parameters:
      - name: customer_id
        in: query
        description: ID(s) of the customer(s)
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: account_manager_id
        in: query
        description: ID(s) of the account manager(s)
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindAccountManagersResponse'
      security:
      - Roles:
        - mobility_manager
        - mobility_manager_assistant
  /customers/{customer_id}/documents:
    get:
      summary: Find documents
      description: This endpoint retrieves a list of documents attached to a customer.
      operationId: findAttachedCustomerDocuments
      parameters:
      - name: count
        in: query
        description: The maximum number of elements to be returned
        schema:
          minimum: 0
          type: integer
          format: int32
        example: false
      - name: offset
        in: query
        description: The number of elements to skip before returning the requested
          list of elements
        schema:
          minimum: 0
          type: integer
          format: int32
        example: false
      - name: sort_by
        in: query
        description: "List of order clauses in which the elements will be returned,\
          \ deprecated since 2022-09-06 and version 1.184.0 in favor of sorting"
        deprecated: true
        schema:
          type: array
          items:
            type: string
      - name: sorting
        in: query
        description: List of order clauses in which the elements will be returned
        schema:
          type: array
          items:
            type: string
      - name: customer_id
        in: path
        description: The ID of the customer
        required: true
        schema:
          type: string
        example: 2147483728
      - name: document_status_id
        in: query
        description: The status ID of the document
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
        example: 1695
      - name: document_template_id
        in: query
        description: The ID of the document template
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
        example: 100018
      responses:
        "404":
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindAttachedCustomerDocumentsResponse'
      security:
      - Roles:
        - retail_customer
    post:
      summary: Attaches customer document
      description: This endpoint attaches a document to a customer.
      operationId: uploadCustomerDocument
      parameters:
      - name: customer_id
        in: path
        description: ID of the customer
        required: true
        schema:
          type: string
      requestBody:
        description: The file to attach to the customer
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttachedDocumentRequest'
        required: true
      responses:
        "404":
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "422":
          description: File upload not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarningsInfoDTO'
        "201":
          description: Created
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
      security:
      - Roles:
        - retail_customer
  /customers/{customer_id}/ubos/documents:
    get:
      summary: Find documents attached to all ubos of a customer
      description: This endpoint retrieves a list of all documents attached to all
        UBOs of a customer.
      operationId: findAttachedUBODocumentsForCustomer
      parameters:
      - name: customer_id
        in: path
        description: ID of the customer
        required: true
        schema:
          type: string
      - name: document_template_id
        in: query
        description: ID(s) of the document template(s)
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "404":
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindAttachedUBODocumentsResponse'
      security:
      - Roles:
        - mobility_manager
        - mobility_manager_assistant
  /customers/{customer_id}/broker-companies:
    get:
      summary: Find broker companies
      description: Deprecated since 2022-09-14 and version 1.63.0 in favor of 'GET
        /customer-broker-companies'.
      operationId: findBrokerCompanies
      parameters:
      - name: customer_id
        in: path
        description: The ID of the customer
        required: true
        schema:
          type: string
      - name: count
        in: query
        description: Maximum number of broker companies to be displayed
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: offset
        in: query
        description: Number of broker companies to skip
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: sort_by
        in: query
        description: Sorting to be applied on the results list
        schema:
          type: string
      responses:
        "404":
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindBrokerCompanyResponse'
      deprecated: true
      security:
      - Roles:
        - dealer_manager
        - dealer_salesperson
        - broker_manager
        - broker_salesperson
  /customer-broker-companies:
    get:
      summary: Find broker companies for customers
      description: This endpoint retrieves the broker companies for the requested
        customers.
      operationId: findCustomerBrokerCompanies
      parameters:
      - name: count
        in: query
        description: The maximum number of elements to be returned
        schema:
          minimum: 0
          type: integer
          format: int32
        example: false
      - name: offset
        in: query
        description: The number of elements to skip before returning the requested
          list of elements
        schema:
          minimum: 0
          type: integer
          format: int32
        example: false
      - name: sort_by
        in: query
        description: "List of order clauses in which the elements will be returned,\
          \ deprecated since 2022-09-06 and version 1.184.0 in favor of sorting"
        deprecated: true
        schema:
          type: array
          items:
            type: string
      - name: sorting
        in: query
        description: List of order clauses in which the elements will be returned
        schema:
          type: array
          items:
            type: string
      - name: customer_id
        in: query
        description: ID(s) of the customer(s)
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            example: "100001"
      - name: broker_company_id
        in: query
        description: "ID(s) of the broker compan(y)(ies), will also be used to filter\
          \ the broker companies sublist"
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            example: "500000"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindCustomerBrokerCompaniesResponse'
      security:
      - Roles:
        - dealer_manager
        - dealer_salesperson
        - broker_manager
        - broker_salesperson
  /customers/{customer_id}/drivers:
    get:
      summary: Find drivers
      description: This endpoint retrieves a list of drivers for a customer.
      operationId: findDrivers
      parameters:
      - name: customer_id
        in: path
        description: ID of the customer
        required: true
        schema:
          type: string
      - name: identification
        in: query
        description: Identification of the driver
        schema:
          type: string
      - name: sign_on
        in: query
        description: Signon of the driver
        schema:
          type: string
      - name: password_expired
        in: query
        description: Whether the password is expired
        schema:
          type: boolean
      - name: account_expired
        in: query
        description: Whether the account is expired
        schema:
          type: boolean
      - name: count
        in: query
        description: Maximum number of drivers to be displayed
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: offset
        in: query
        description: Number of drivers to skip before selecting customers
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      responses:
        "404":
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindDriversResponse'
      security:
      - Roles:
        - customer_support
        - account_manager
  /customers/{customer_id}/fleet-managers:
    get:
      summary: Find fleet managers
      description: This endpoint retrieves a list of fleet managers for a customer.
      operationId: findFleetManagers
      parameters:
      - name: customer_id
        in: path
        description: ID of the customer
        required: true
        schema:
          type: string
      - name: identification
        in: query
        description: Identification of the fleet manager
        schema:
          type: string
      - name: sign_on
        in: query
        description: Signon of the fleet manager
        schema:
          type: string
      - name: password_expired
        in: query
        description: Whether the password is expired
        schema:
          type: boolean
      - name: account_expired
        in: query
        description: Whether the account is expired
        schema:
          type: boolean
      - name: count
        in: query
        description: Maximum number of fleet managers to be displayed
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: offset
        in: query
        description: Number of fleet managers to skip before selecting customers
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      responses:
        "404":
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindFleetManagersResponse'
      security:
      - Roles:
        - customer_support
        - account_manager
  /customers/sites:
    get:
      summary: Find sites for customers
      description: This endpoint retrieves sites for the requested customers.
      operationId: findSites
      parameters:
      - name: count
        in: query
        description: The maximum number of elements to be returned
        schema:
          minimum: 0
          type: integer
          format: int32
        example: false
      - name: offset
        in: query
        description: The number of elements to skip before returning the requested
          list of elements
        schema:
          minimum: 0
          type: integer
          format: int32
        example: false
      - name: sort_by
        in: query
        description: "List of order clauses in which the elements will be returned,\
          \ deprecated since 2022-09-06 and version 1.184.0 in favor of sorting"
        deprecated: true
        schema:
          type: array
          items:
            type: string
      - name: sorting
        in: query
        description: List of order clauses in which the elements will be returned
        schema:
          type: array
          items:
            type: string
      - name: customer_id
        in: query
        description: ID(s) of the customer(s)
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            example: "200001"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindSitesResponse'
      security:
      - Roles:
        - mobility_manager
        - account_manager
  /customers/{customer_id}/account-managers/{account_manager_id}:
    get:
      summary: Get account manager
      description: This endpoint retrieves an associate account manager.
      operationId: getAccountManager
      parameters:
      - name: customer_id
        in: path
        description: The ID of the customer
        required: true
        schema:
          type: string
      - name: account_manager_id
        in: path
        description: ID of the account manager
        required: true
        schema:
          type: string
      responses:
        "404":
          description: |-
            - Customer not found
            - Account manager not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountManager'
      security:
      - Roles:
        - mobility_manager
        - mobility_manager_assistant
  /customers/{customer_id}/documents/{document_id}:
    get:
      summary: Get document
      description: This endpoint downloads a document attached to a customer.
      operationId: getAttachedCustomerDocument
      parameters:
      - name: customer_id
        in: path
        description: The ID of the customer
        required: true
        schema:
          type: string
        example: 2147483728
      - name: document_id
        in: path
        description: The ID of the document
        required: true
        schema:
          type: string
        example: 7263060
      responses:
        "200":
          description: Response is a download
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          x-isResponseFile: "true"
        "404":
          description: |-
            - Customer not found
            - Document not found
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
      security:
      - Roles:
        - retail_customer
  /companies/{official_registration}:
    get:
      summary: Get company information
      description: This endpoint retrieves information on a company given an official
        registration number.
      operationId: getCompanyByOfficialRegistration
      parameters:
      - name: official_registration
        in: path
        description: Official registrations of the customer
        required: true
        schema:
          type: string
      - name: country
        in: query
        description: Country in format ISO3166-1 alpha-2
        schema:
          type: string
        example: FR
      responses:
        "404":
          description: Company not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCustomer'
      security:
      - Roles:
        - dealer_manager
        - dealer_salesperson
        - broker_manager
        - broker_salesperson
  /customers/{customer_id}:
    get:
      summary: Get customer
      description: This endpoint retrieves a customer by ID. The legal entity group
        of the customer determines which response fields will be present & filled.
      operationId: getCustomer
      parameters:
      - name: customer_id
        in: path
        description: ID of the customer
        required: true
        schema:
          type: string
      responses:
        "404":
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
      security:
      - Roles:
        - dealer_manager
        - dealer_salesperson
        - broker_manager
        - broker_salesperson
    put:
      summary: Update customer
      description: "This endpoint updates the data of the customer, but the customer\
        \ needs to have the  state 'Broker Prospect'."
      operationId: updateCustomer
      parameters:
      - name: customer_id
        in: path
        description: ID of the customer to update
        required: true
        schema:
          type: string
      - name: ignore_warnings
        in: query
        description: |-
          Indicates whether warnings should be ignored.
          If set to true, interactive warnings will be ignored.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Data required to update a customer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerUpdateRequest'
        required: true
      responses:
        "200":
          description: default response
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Customer'
        "404":
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarningsInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
      security:
      - Roles:
        - dealer_manager
        - dealer_salesperson
        - broker_manager
        - broker_salesperson
  /legal-entity-groups:
    get:
      summary: Get legal entity groups
      description: This endpoint returns the legal entity groups. The reference customer
        IDs that map to the corresponding legal entity group are configured in the
        service property legal.entity.groups.reference.customer.ids.
      operationId: getLegalEntityGroups
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalEntityGroupsResponse'
      security:
      - Roles:
        - dealer_manager
        - dealer_salesperson
        - broker_manager
        - broker_salesperson
  /customers/sites/{site_id}:
    get:
      summary: Get site by site ID
      description: This endpoint retrieves the site linked to the requested site ID.
      operationId: getSite
      parameters:
      - name: site_id
        in: path
        description: The ID of the site
        required: true
        schema:
          type: string
        example: 1000009
      responses:
        "404":
          description: Site not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
      security:
      - Roles:
        - mobility_manager
        - account_manager
  /customer/sites/{site_id}:
    get:
      summary: Get site by site ID
      description: "Deprecated since 2022-11-21 and version 1.71.0 in favor of 'GET\
        \ /customers/sites/{site_id}'."
      operationId: getSiteDeprecated
      parameters:
      - name: site_id
        in: path
        description: The ID of the site
        required: true
        schema:
          type: string
        example: 1000009
      responses:
        "404":
          description: Site not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
      deprecated: true
      security:
      - Roles:
        - mobility_manager
        - account_manager
  /filters:
    get:
      summary: List filters
      description: "This endpoint retrieves a list of filters with their possible\
        \ values. The filters to return are configured in property allowed.enumeration.ids.to.use.for.filters\
        \ defined in CONFIGURATION.md of this service. That configuration property\
        \ contains attribute type ID(s) that can be returned. This configuration defaults\
        \ to 104 (Person title), 114 (Legal entity) and 263 (Tax liability)."
      operationId: listFilters
      parameters:
      - name: filter_id
        in: query
        description: ID(s) of the filter(s)
        schema:
          type: array
          items:
            type: string
            example: "200209"
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFiltersResponse'
      security:
      - Roles:
        - broker_manager
        - broker_salesperson
        - dealer_manager
        - dealer_salesperson
        - mobility_manager
        - account_manager
  /customers/{customer_id}/broker-companies/{broker_company_id}:
    delete:
      summary: Delete broker company-customer link
      description: This endpoint deletes the link between the broker company and customer.
      operationId: unlinkBrokerCompanyFromCustomer
      parameters:
      - name: customer_id
        in: path
        description: ID of the customer to which the broker company is linked
        required: true
        schema:
          type: string
        example: 2147483728
      - name: broker_company_id
        in: path
        description: ID of the broker company to remove
        required: true
        schema:
          type: string
        example: 500000
      responses:
        "404":
          description: |-
            - Customer not found
            - Broker company not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarningsInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "204":
          description: No Content
      security:
      - Roles:
        - broker_manager
        - broker_salesperson
        - dealer_manager
        - dealer_salesperson
  /customers/{customer_id}/sites/{site_id}:
    put:
      summary: Update a site for a customer
      description: This endpoint updates a site for a customer with the given customer
        ID.
      operationId: updateSite
      parameters:
      - name: customer_id
        in: path
        description: The ID of the customer
        required: true
        schema:
          type: string
        example: 1000001
      - name: site_id
        in: path
        description: The ID of the site
        required: true
        schema:
          type: string
        example: 1000009
      - name: ignore_warnings
        in: query
        description: |-
          Indicates whether warnings should be ignored.
          If set to true, interactive warnings will be ignored.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Data required to update an existing site
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSiteRequest'
        required: true
      responses:
        "404":
          description: |-
            - Customer not found
            - Site not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarningsInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
      security:
      - Roles:
        - mobility_manager
        - account_manager
  /m2m/customers/{customer_id}/bank-accounts:
    get:
      tags:
      - M2MCustomerResource
      summary: Get customer bank accounts
      description: This endpoint retrieves bank accounts related to a customer.
      operationId: getCustomerBankAccountsForM2M
      parameters:
      - name: customer_id
        in: path
        description: The ID of the customer
        required: true
        schema:
          type: string
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindBankAccountsResponse'
      security:
      - Roles:
        - m2m_relation_management
      x-miles-m2m: true
  /m2m/customers/{customer_id}:
    get:
      tags:
      - M2MCustomerResource
      summary: Get customer
      description: This endpoint retrieves a customer by ID. It is intended for machine-to-machine
        integrations.
      operationId: getCustomerForM2M
      parameters:
      - name: customer_id
        in: path
        description: ID of the customer
        required: true
        schema:
          type: string
        example: 1000001
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M2MCustomer'
      security:
      - Roles:
        - m2m_relation_management
      x-miles-m2m: true
  /m2m/customers/{customer_id}/payment-preferences:
    get:
      tags:
      - M2MCustomerResource
      summary: Get customer payment preferences
      description: This endpoint retrieves payment preferences for a given customer.
      operationId: getCustomerPaymentPreferencesForM2M
      parameters:
      - name: customer_id
        in: path
        description: The ID of the customer
        required: true
        schema:
          type: string
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindPaymentPreferencesResponse'
      security:
      - Roles:
        - m2m_relation_management
      x-miles-m2m: true
  /retail-customer:
    post:
      summary: Create a new retail customer
      description: "This endpoint creates a new retail customer. Retail customers\
        \ can create cases and add comments to these cases. When creating an individual\
        \ retail customer, you need to supply the individualPerson object."
      operationId: createRetailCustomer
      parameters:
      - name: ignore_warnings
        in: query
        description: |-
          Indicates whether warnings should be ignored.
          If set to true, interactive warnings will be ignored.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Data required to create a new retail customer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRetailCustomerRequest'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarningsInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetailCustomer'
      security:
      - Roles:
        - dealer_manager
  /retail-customer/current/bank-accounts:
    get:
      summary: Get bank accounts for current retail customer
      description: This endpoint retrieves bank accounts for the currently authenticated
        user if this user is a retail customer.
      operationId: getBankAccountsForCurrentRetailCustomer
      parameters:
      - name: count
        in: query
        description: Maximum number of bank accounts to be displayed
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: offset
        in: query
        description: Number of bank accounts to skip before selecting customer
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: sort_by
        in: query
        description: Sorting to be applied on the results list
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindBankAccountsResponse'
      security:
      - Roles:
        - retail_customer
  /retail-customer/current/consents:
    get:
      summary: Get consents for the current retail customer
      description: This endpoint retrieves the currently valid consents for the currently
        authenticated user if this user is a retail customer. Consents that have been
        withdrawn have an opt-out date in the past and are not returned.
      operationId: getConsentsForCurrentRetailCustomer
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindConsentResponse'
      security:
      - Roles:
        - retail_customer
  /retail-customer/current:
    get:
      summary: Get the current retail customer
      description: This endpoint retrieves the currently authenticated retail customer
        if the authenticated user has the role retail customer.
      operationId: getCurrentRetailCustomer
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetailCustomer'
      security:
      - Roles:
        - retail_customer
    put:
      summary: Update a retail customer
      description: "This endpoint updates a retail customer. If the attribute isUpdateRestricted\
        \ returns true, the requested update still needs to be processed by the back-office\
        \ application. It may take a couple of business days before this change is\
        \ validated and approved. In this case the old data is returned."
      operationId: updateRetailCustomer
      parameters:
      - name: ignore_warnings
        in: query
        description: "Indicates whether warnings should be ignored. If set to true,\
          \ interactive warnings will be ignored."
        schema:
          type: boolean
          default: false
      requestBody:
        description: Data required to update a retail customer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRetailCustomerRequest'
        required: true
      responses:
        "422":
          description: Could not update retail customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarningsInfoDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRetailCustomerResponse'
      security:
      - Roles:
        - retail_customer
  /retail-customer/current/payment-preferences:
    get:
      summary: Get customer payment preferences
      description: This endpoint retrieves payment preferences for the currently authenticated
        user if this user is a retail customer.
      operationId: getPaymentPreferencesForCurrentRetailCustomer
      parameters:
      - name: count
        in: query
        description: Maximum number of payment preferences to be displayed
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: offset
        in: query
        description: The number of payment preferences to exclude before returning
          the collection
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: sort_by
        in: query
        description: Sorting to be applied on the results list
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindPaymentPreferencesResponse'
      security:
      - Roles:
        - retail_customer
  /retail-customer/current/update-restrictions:
    get:
      summary: Get info and status on update restrictions for the current retail customer
      description: "This endpoint retrieves info on all update restrictions that are\
        \ currently active for the retail customer linked to the authenticated user.\
        \ If there is an active data change request for the retail customer, it means\
        \ that the retail customer cannot be updated until the data change request\
        \ has been handled."
      operationId: getUpdateRestrictionsForCurrentRetailCustomer
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionInfoDTO'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetailCustomerUpdateRestrictionsResponse'
      security:
      - Roles:
        - retail_customer
components:
  schemas:
    AddressHistoryResponse:
      type: object
      properties:
        addressHistoryId:
          type: string
          description: The ID of the address history
          example: "45122"
        addressLabel:
          description: The predefined label of the contact address
          $ref: '#/components/schemas/EnumValue'
        addressId:
          type: string
          description: The ID of the contact address
          example: "15000"
        validFrom:
          type: string
          description: The start date from which the address history record is valid
          format: date
        validTo:
          type: string
          description: The end date until which the address history record is valid
          format: date
        creationDate:
          type: string
          description: The date on which the address history record was created
          format: date-time
    EnumValue:
      title: EnumValue
      type: object
      properties:
        enumId:
          type: string
          description: The enumeration ID
          example: "100002"
        attributeTypeId:
          type: string
          description: ' The ID of the attribute type'
          example: "237"
        enumGroupId:
          type: string
          description: This will be represented as a separate attribute value
          example: "1350"
          deprecated: true
        multiLanguageId:
          type: string
          description: The multi-language ID that can be used to retrieve the translation
            in other languages
          example: "24379"
        translation:
          type: string
          description: The translation of the enumeration ID in human-readable format
          example: Request
        enabled:
          type: boolean
          description: Indicates whether this object can still be used
          example: true
      description: Miles API v1 representation of an enum value. It contains additional
        values representing the attribute type and multi-language context.
    AddressHistoryRequest:
      type: object
      properties:
        addressLabel:
          description: The predefined label of the address
          $ref: '#/components/schemas/SimpleEnumValue'
        validFrom:
          type: string
          description: The start date from which the address history record is valid
          format: date
        validTo:
          type: string
          description: The end date until which the address history record is valid
          format: date
        addressLine1:
          type: string
          description: The first address line
          example: Street Address 1
        addressLine1Number:
          type: string
          description: The house number of the first address
          example: "11"
        addressLine2:
          type: string
          description: The second address line
          example: Street Address 2
        addressLine3:
          type: string
          description: The third address line
          example: Street Address 3
        addressLine4:
          type: string
          description: The fourth address line
          example: Street Address 4
        addressLine5:
          type: string
          description: The fifth address line
          example: Street Address 5
        postalCode:
          type: string
          description: The postal code of the address
          example: "81549"
        city:
          type: string
          description: The city of the address
          example: Ghent
        countryIso:
          maxLength: 3
          minLength: 2
          type: string
          description: The country code
          format: ISO3166-1 alpha-2 or ISO3166-1 alpha-3
          example: BE
        state:
          type: string
          description: The state of the address
          example: Oost-Vlaanderen
    SimpleEnumValue:
      title: SimpleEnumValue
      type: object
      properties:
        enumId:
          type: string
          description: The enumeration ID
          example: "100002"
      description: Miles API v1 representation of a simple enumeration value
    ExceptionInfoDTO:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        detail:
          type: string
        message:
          $ref: '#/components/schemas/MultiLanguageValue'
        arguments:
          type: array
          items:
            type: string
    MultiLanguageValue:
      title: MultiLanguageValue
      type: object
      properties:
        multiLanguageId:
          type: string
          description: The multi-language ID that can be used to retrieve the translation
            in other languages
          example: "170392"
        translation:
          type: string
          description: The translation of the multi-language ID in human-readable
            format
          example: Hatchback
      description: Miles API v1 representation of a translated string value.
    WarningsInfoDTO:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        detail:
          type: string
        messages:
          type: array
          items:
            $ref: '#/components/schemas/MultiLanguageValue'
        arguments:
          type: array
          items:
            type: string
        isInteractiveWarning:
          type: boolean
        interactiveWarning:
          type: boolean
    AbstractValue:
      type: object
      description: An object that contains the actual value
    Address:
      type: object
      properties:
        addressId:
          type: string
          description: The address ID
          example: "23287213"
        addressLine1:
          description: The first address line
          $ref: '#/components/schemas/MultiLanguageValue'
        addressLine1Nr:
          description: The number of the first address line
          $ref: '#/components/schemas/MultiLanguageValue'
        addressLine2:
          description: The second address line
          $ref: '#/components/schemas/MultiLanguageValue'
        addressLine3:
          description: The third address line
          $ref: '#/components/schemas/MultiLanguageValue'
        addressLine4:
          description: The fourth address line
          $ref: '#/components/schemas/MultiLanguageValue'
        addressLine5:
          description: The fifth address line
          $ref: '#/components/schemas/MultiLanguageValue'
        postalCode:
          type: string
          description: The postal code of the address
          example: "9000"
        city:
          description: The city of the address
          $ref: '#/components/schemas/MultiLanguageValue'
        country:
          description: The country of the address
          $ref: '#/components/schemas/Country'
        formattedAddress:
          type: string
          description: The formatted address
          example: Leasingweg 1 1000 AA AMSTERDAM
        state:
          description: The state of the address
          $ref: '#/components/schemas/MultiLanguageValue'
        dynamicAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DynamicAttributeValue'
          description: A map of dynamic attributes
      description: The address itself
    Bank:
      type: object
      properties:
        bankId:
          type: string
          description: Bank ID
          example: "100005"
        identifier:
          type: string
          description: Bank Identifier
          example: RESERVE BANK
        addresses:
          type: array
          description: A list of primary contact addresses of the bank
          items:
            $ref: '#/components/schemas/ContactAddress'
      description: Bank
    BankAccount:
      type: object
      properties:
        bankAccountId:
          type: string
          description: Bank account ID
          example: "100001"
        accountNumber:
          type: string
          description: Bank account number
          example: BE61199373268217
        checkType:
          description: Check type
          $ref: '#/components/schemas/EnumValue'
        description:
          description: Description
          $ref: '#/components/schemas/MultiLanguageValue'
        bankAccountState:
          description: Bank account state
          $ref: '#/components/schemas/EnumValue'
        bankAccountType:
          description: Bank account type
          $ref: '#/components/schemas/EnumValue'
        bankCode:
          type: string
          description: Bank code
          example: ABNANL2A
        customerAccount:
          type: string
          description: Customer account
          example: Customer
        holderIdentification:
          type: string
          description: Holder identification
          example: "00147585472"
        generalLedgerAccountId:
          type: string
          description: General ledger account ID
          example: "350260"
        bank:
          description: Bank
          $ref: '#/components/schemas/Bank'
        dynamicAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DynamicAttributeValue'
          description: A map of dynamic attributes
      description: Bank account
    ContactAddress:
      type: object
      properties:
        label:
          description: The label of the contact address
          $ref: '#/components/schemas/EnumValue'
        address:
          description: The address itself
          $ref: '#/components/schemas/Address'
      description: Customer contact address
    Country:
      type: object
      properties:
        countryId:
          type: string
          description: The ID of the country
          example: "12345679"
        countryCodeIso2:
          maxLength: 2
          minLength: 2
          type: string
          description: The ISO2 code of the country
          example: BE
      description: The country of the address
    DynamicAttributeValue:
      title: DynamicAttributeValue
      type: object
      properties:
        valueType:
          type: integer
          description: "Based on this integer the 'value' will consist of a value\
            \ matching these types: \n * 1  = MultiLanguageValue \n * 2  = EnumValue\
            \ \n * 3  = MultiCurrencyValue \n * 4  = DoubleUnitValue \n * 5  = IntegerUnitValue\
            \ \n * 6  = StringValue \n * 7  = IntegerValue \n * 8  = DoubleValue \n\
            \ * 9  = BooleanValue \n * 10 = UnnamedValue \n * 11 = DateValue \n *\
            \ 12 = TimeValue \n * 13 = DateTimeValue \n * 14 = ZonedDateTimeValue\
            \ \n * 15 = LongValue \n"
          format: int32
          example: 7
        value:
          description: An object that contains the actual value
          $ref: '#/components/schemas/AbstractValue'
        sysRepAttributeId:
          type: string
          description: The Miles back-office application ID that describes the attribute
      description: Miles API v1 representation of a dynamic attribute value.It has
        a 'valueType' as a discriminator for the actual 'value'.The 'sysRepAttributeId'
        identifies which attribute value is represented.
    GetBankAccountsResponse:
      type: object
      properties:
        bankAccounts:
          type: array
          description: The customer's own bank accounts.
          items:
            $ref: '#/components/schemas/BankAccount'
        paymentPreferences:
          type: array
          description: The list of payment preferences
          items:
            $ref: '#/components/schemas/PaymentPreference'
        accessibleBankAccounts:
          type: array
          description: "Bank accounts not owned by this customer, and therefore not\
            \ modifiable. These accounts are available to be used for payment preferences\
            \ for this customer."
          items:
            $ref: '#/components/schemas/BankAccount'
    PaymentPreference:
      type: object
      properties:
        paymentPreferenceId:
          type: string
          description: Payment Preference ID
          example: "100001"
        bankAccountId:
          type: string
          description: Bank account ID
          example: "600001"
        paymentMethod:
          description: Payment method
          $ref: '#/components/schemas/EnumValue'
        preferenceStatus:
          description: Preference status
          $ref: '#/components/schemas/EnumValue'
        reference:
          type: string
          description: Reference
          example: Payment/001
        validFrom:
          type: string
          description: Valid from
          format: date
        validTo:
          type: string
          description: Valid to
          format: date
        isPreferred:
          type: boolean
          description: Indicates if payment is preferred
          example: true
          default: false
        preferenceType:
          description: Preference Type
          $ref: '#/components/schemas/SimpleEnumValue'
        leasingCompanyId:
          type: string
          description: Leasing company ID
          example: "1"
        dynamicAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DynamicAttributeValue'
          description: A map of dynamic attributes
      description: Payment preference
    BankAccountRequest:
      required:
      - bankAccountState
      type: object
      properties:
        generalLedgerAccountId:
          type: string
          description: The ID of the general ledger account
          example: "350291"
        currencyId:
          type: string
          description: The ID of the currency
        bankId:
          type: string
          description: The ID of the bank
        accountNumber:
          type: string
          description: Account Number
          example: BE12345678910112
        checkType:
          description: Bank account check type
          $ref: '#/components/schemas/SimpleEnumValue'
        description:
          description: Description
          $ref: '#/components/schemas/MultiLanguageValue'
        bankAccountType:
          description: Bank account type
          $ref: '#/components/schemas/SimpleEnumValue'
        bankAccountState:
          description: Bank account state
          $ref: '#/components/schemas/SimpleEnumValue'
        bankCode:
          type: string
          description: Bank Code
          example: KREDBECD
        customerAccount:
          type: string
          description: Customer Account
          example: Sofico
        holderIdentification:
          type: string
          description: Holder Identification
          example: BE33ZZZ0600730562
        paymentPreferences:
          type: array
          description: The list of payment preferences
          items:
            $ref: '#/components/schemas/PaymentPreference'
        dynamicAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SimpleDynamicAttributeValue'
          description: A map of dynamic attributes
    SimpleDynamicAttributeValue:
      type: object
      properties:
        value:
          type: string
          description: The value of the dynamic attribute
          example: "5"
      description: _
    GetPaymentPreferencesResponse:
      type: object
      properties:
        paymentPreferences:
          type: array
          description: The list of payment preferences
          items:
            $ref: '#/components/schemas/PaymentPreference'
    PaymentPreferenceRequest:
      type: object
      properties:
        bankAccountId:
          type: string
          description: The ID of the bank account
          example: "2745687"
        paymentPreferences:
          type: array
          description: The list of payment preferences
          items:
            $ref: '#/components/schemas/PaymentPreference'
    CustomerReference:
      type: object
      properties:
        customerId:
          type: string
          description: The customer ID
          example: "100001"
        tradingName:
          type: string
          description: The trading name of the customer
          example: My Brilliant Company
        reference:
          type: string
          description: The reference of the customer
          example: Reference 1
      description: The customer linked to the site
    InternetReference:
      type: object
      properties:
        internetReferenceId:
          type: string
          description: The internet reference ID
          example: "41199698"
        url:
          type: string
          description: The url of the reference
          example: sofico@sofico.be
        internetReferenceType:
          description: The internet reference type
          $ref: '#/components/schemas/EnumValue'
      description: Internet reference
    PhoneNumber:
      type: object
      properties:
        phoneNumberId:
          type: string
          description: The ID of the phone number
          example: "41199698"
        formattedPhoneNumber:
          type: string
          description: The formatted phone number
          example: "0032474002342"
        zonalPhoneNumber:
          type: string
          description: The zonal phone number
          example: "024"
        localPhoneNumber:
          type: string
          description: The local phone number
          example: "2474002342"
        countryPhoneCode:
          type: string
          description: The country phone code
          example: "32"
        phoneNumberType:
          description: The type of phone number
          $ref: '#/components/schemas/EnumValue'
        country:
          description: The country of the phone number
          $ref: '#/components/schemas/Country'
        phoneType:
          description: Deprecated since 2021-11-16 and version 1.37.0 in favor of
            phoneNumberType
          $ref: '#/components/schemas/EnumValue'
      description: Phone number
    Site:
      type: object
      properties:
        siteId:
          type: string
          description: The ID of the site
          example: "600003"
        name:
          type: string
          description: Name of the site
          example: Services
        reference:
          type: string
          description: Reference of the site
          example: Finance
        siteType:
          description: The site type
          $ref: '#/components/schemas/EnumValue'
        customer:
          description: The customer linked to the site
          $ref: '#/components/schemas/CustomerReference'
        phoneNumbers:
          type: array
          description: A list of addresses
          items:
            $ref: '#/components/schemas/PhoneNumber'
        internetReferences:
          type: array
          description: A list of phone numbers
          items:
            $ref: '#/components/schemas/InternetReference'
        addresses:
          type: array
          description: A list of internet references
          items:
            $ref: '#/components/schemas/ContactAddress'
        dynamicAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DynamicAttributeValue'
          description: A map of dynamic attributes
    AddressRequest:
      type: object
      properties:
        addressLine1:
          type: string
          description: Address line 1
          example: Longstreet
        addressLine1Number:
          type: string
          description: Address line 1 number
          example: "5"
        addressLine2:
          type: string
          description: Address line 2
          example: Address information
        addressLine3:
          type: string
          description: Address line 3
          example: Address information
        addressLine4:
          type: string
          description: Address line 4
          example: Address information
        addressLine5:
          type: string
          description: Address line 5
          example: Address information
        city:
          type: string
          description: City
          example: Ghent
        postalCode:
          type: string
          description: Postal code
          example: "9000"
        state:
          type: string
          description: State
          example: GE
        country:
          maxLength: 3
          minLength: 2
          type: string
          description: Country code
          format: ISO3166-1 alpha-2 or ISO3166-1 alpha-3
          example: BE
        addressType:
          description: Address type
          $ref: '#/components/schemas/SimpleEnumValue'
      description: Contact address
    CreateSiteRequest:
      required:
      - name
      - reference
      - siteType
      type: object
      properties:
        name:
          type: string
          description: Name of the site
          example: Services
        reference:
          type: string
          description: Reference of the site
          example: Finance
        siteType:
          description: Site type
          $ref: '#/components/schemas/SimpleEnumValue'
        addresses:
          type: array
          description: A list of addresses
          items:
            $ref: '#/components/schemas/AddressRequest'
        phoneNumbers:
          type: array
          description: A list of phone numbers
          items:
            $ref: '#/components/schemas/PhoneNumberRequest'
        internetReferences:
          type: array
          description: A list of internet references
          items:
            $ref: '#/components/schemas/InternetReferenceRequest'
        dynamicAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SimpleDynamicAttributeValue'
          description: A map of dynamic attributes
    InternetReferenceRequest:
      type: object
      properties:
        url:
          type: string
          description: Internet reference url
          example: "E-mail : name@test.com"
        internetReferenceType:
          description: Internet reference type
          $ref: '#/components/schemas/SimpleEnumValue'
      description: Internet reference
    PhoneNumberRequest:
      type: object
      properties:
        number:
          type: string
          description: Phone number
          example: 0465 123 456
        country:
          maxLength: 3
          minLength: 2
          type: string
          description: Country code
          format: ISO3166-1 alpha-2 or ISO3166-1 alpha-3
          example: BE
        phoneType:
          description: Phone type
          $ref: '#/components/schemas/SimpleEnumValue'
      description: Phone number
    AttachedDocument:
      type: object
      properties:
        depositId:
          type: string
          description: The ID of the deposit
          example: "134586"
        documentId:
          type: string
          description: The ID of the document
          example: "227582"
        name:
          description: The name of the document
          $ref: '#/components/schemas/MultiLanguageValue'
        documentType:
          type: string
          description: The type of the document
          example: Invoice
        description:
          description: The description of the document
          $ref: '#/components/schemas/MultiLanguageValue'
    AttachedDocumentRequest:
      type: object
      properties:
        file:
          type: string
          description: file data
          format: binary
        description:
          type: string
    Consent:
      type: object
      properties:
        consentId:
          type: string
          description: The consent ID
          example: "10001"
        optInDate:
          type: string
          description: Date the consent was given
          format: date
        optOutDate:
          type: string
          description: Date the consent was revoked
          format: date
        dataProcessingActivity:
          description: The data processing activity
          $ref: '#/components/schemas/EnumValue'
      description: The consent
    ConsentResponse:
      type: object
      properties:
        consents:
          type: array
          description: A list of consents
          items:
            $ref: '#/components/schemas/Consent'
    CreateConsentRequest:
      required:
      - dataProcessingActivityIds
      type: object
      properties:
        dataProcessingActivityIds:
          uniqueItems: true
          type: array
          description: A list of data processing activity enumeration IDs
          items:
            type: string
            description: The data processing activity enumeration ID
            example: "4000"
    ContactPersonResponse:
      type: object
      properties:
        firstName:
          type: string
          description: First name
          example: John
        lastName:
          type: string
          description: Last name
          example: Smith
        secondLastName:
          type: string
          description: Second last name
          example: Lopez
        placeOfBirth:
          type: string
          description: The place of birth
          example: Brussels
        dateOfBirth:
          type: string
          description: Date of birth
          format: date
        personTitle:
          description: Person title
          $ref: '#/components/schemas/EnumValue'
        gender:
          description: Gender of the person
          $ref: '#/components/schemas/EnumValue'
        country:
          description: Country
          $ref: '#/components/schemas/Country'
        officialRegistration:
          type: string
          description: The official registration of the person
          example: 36468213B
        dynamicAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DynamicAttributeValue'
          description: A map of dynamic attributes
      description: The person linked to the contact
    ContactResponse:
      type: object
      properties:
        contactId:
          type: string
          description: The ID of the contact
          example: "41199698"
        joinDate:
          type: string
          description: The date on which the contact started at the customer
          format: date
        leaveDate:
          type: string
          description: The date on which the contact left the customer
          format: date
        identification:
          type: string
          description: Identification of the contact
          example: "Bonenstaak, Jaak (R.)"
        jobTitle:
          type: string
          description: Job title of the contact
          example: Developer
        employeeNumber:
          type: string
          description: Employee number of the contact
          example: "007"
        comments:
          type: string
          description: Additional comments for the contact
          example: Important client
        person:
          description: The person linked to the contact
          $ref: '#/components/schemas/ContactPersonResponse'
        phoneNumbers:
          type: array
          description: A list of phone numbers
          items:
            $ref: '#/components/schemas/PhoneNumber'
        addresses:
          type: array
          description: A list of customer contact addresses
          items:
            $ref: '#/components/schemas/ContactAddress'
        internetReferences:
          type: array
          description: A list of internet references
          items:
            $ref: '#/components/schemas/InternetReference'
        dynamicAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DynamicAttributeValue'
          description: A map of dynamic attributes
    ContactPersonRequest:
      type: object
      properties:
        firstName:
          type: string
          description: First name
          example: John
        lastName:
          type: string
          description: Last name
          example: Smith
        secondLastName:
          type: string
          description: Second last name
          example: Smith
        maidenName:
          type: string
          description: Maiden name
          example: Black
        maidenMiddleName:
          type: string
          description: Maiden middle name
          example: Ronald
        maidenSecondLastName:
          type: string
          description: Maiden second last name
          example: McDonald
        placeOfBirth:
          type: string
          description: The place of birth
          example: Brussels
        dateOfBirth:
          type: string
          description: Date of birth
          format: date
        personTitle:
          description: Person title
          $ref: '#/components/schemas/SimpleEnumValue'
        gender:
          description: Gender of the person
          $ref: '#/components/schemas/SimpleEnumValue'
        country:
          maxLength: 3
          minLength: 2
          pattern: "^([A-Za-z]{2,3})?$"
          type: string
          description: The country code
          format: ISO3166-1 alpha-2 or ISO3166-1 alpha-3
          example: BE
        officialRegistration:
          type: string
          description: The official registration of the person
          example: 36468213B
        dynamicAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SimpleDynamicAttributeValue'
          description: A map of dynamic attributes
      description: The person linked to the contact
    CreateContactRequest:
      required:
      - person
      type: object
      properties:
        joinDate:
          type: string
          description: The date on which the contact started at the customer
          format: date
        leaveDate:
          type: string
          description: The date on which the contact left the customer
          format: date
        identification:
          type: string
          description: Identification of the contact
          example: "Bonenstaak, Jaak (R.)"
        jobTitle:
          type: string
          description: Job title of the contact
          example: Developer
        employeeNumber:
          type: string
          description: Employee number of the contact
          example: "007"
        comments:
          type: string
          description: Additional comments for the contact
          example: Important client
        contactRoleIds:
          type: array
          description: A list of contact role IDs to be set on the contact
          items:
            type: string
            description: Contact role IDs
        person:
          description: The person linked to the contact
          $ref: '#/components/schemas/ContactPersonRequest'
        addresses:
          type: array
          description: A list of addresses
          items:
            $ref: '#/components/schemas/AddressRequest'
        phoneNumbers:
          type: array
          description: A list of phone numbers
          items:
            $ref: '#/components/schemas/PhoneNumberRequest'
        internetReferences:
          type: array
          description: A list of internet references
          items:
            $ref: '#/components/schemas/InternetReferenceRequest'
        dynamicAttributes:
          type: array
          description: A map of dynamic attributes
          items:
            type: object
            additionalProperties:
              $ref: '#/components/schemas/SimpleDynamicAttributeValue'
            description: Dynamic attributes
    BrokerCompanyReference:
      type: object
      properties:
        brokerCompanyId:
          type: string
          description: The ID of the broker company
          example: "100001"
        tradingName:
          type: string
          description: The trading name of the broker company
          example: Company Co
      description: A linked broker company to this customer
    CreateCustomerResponse:
      type: object
      properties:
        customerId:
          type: string
          description: The ID of the customer
          example: "41199698"
        tradingName:
          type: string
          description: Trading name
          example: John Doe
        legalName:
          type: string
          description: Legal name
          example: John Doe Inc
        officialRegistration:
          type: string
          description: Official registration
          example: 404.484.060
        vatNumber:
          type: string
          description: VAT number
          example: "41199698"
        establishmentDate:
          type: string
          description: Establishment date
          format: date
        legalEntity:
          description: Legal entity
          $ref: '#/components/schemas/EnumValue'
        taxLiability:
          description: Tax liability
          $ref: '#/components/schemas/EnumValue'
        customerState:
          description: The state of the customer
          $ref: '#/components/schemas/EnumValue'
        individualPerson:
          description: Individual person of customer
          $ref: '#/components/schemas/IndividualPerson'
        phoneNumbers:
          type: array
          description: A list of phone numbers
          items:
            $ref: '#/components/schemas/PhoneNumber'
        addresses:
          type: array
          description: A list of customer contact addresses
          items:
            $ref: '#/components/schemas/ContactAddress'
        internetReferences:
          type: array
          description: A list of internet references
          items:
            $ref: '#/components/schemas/InternetReference'
        sectorCodeInfo:
          description: Sector code information
          $ref: '#/components/schemas/SectorCodeInfo'
        dynamicAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DynamicAttributeValue'
          description: A map of dynamic attributes
        companyGroupReference:
          type: string
          description: Internal company code
          example: "1234"
        carFleetSize:
          type: integer
          description: Car fleet size
          format: int32
          example: 20
        commercialFleetSize:
          type: integer
          description: Commercial fleet size
          format: int32
          example: 15
        knowYourCustomerSource:
          description: The enumeration value that identifies how the leasing company
            got into contact with the prospect/customer
          $ref: '#/components/schemas/EnumValue'
        brokerCompanies:
          type: array
          description: A list of the broker companies to which this customer is linked
          items:
            $ref: '#/components/schemas/BrokerCompanyReference'
    IndividualPerson:
      type: object
      properties:
        personId:
          type: string
          description: ID of the person
          example: "100099"
        firstName:
          type: string
          description: First name of the person
          example: John
        middleName:
          type: string
          description: Middle name of the person
          example: Fraser
        lastName:
          type: string
          description: Last name of the person
          example: Doe
        secondLastName:
          type: string
          description: Second last name of the person
          example: Lopez
        maidenName:
          type: string
          description: Maiden name of the person
          example: Dane
        maidenMiddleName:
          type: string
          description: Maiden middle name of the person
          example: Ronald
        maidenSecondLastName:
          type: string
          description: Maiden second last name of the person
          example: McDonald
        initials:
          type: string
          description: Initials of the person
          example: J.D.
        gender:
          description: Gender
          $ref: '#/components/schemas/EnumValue'
        birthDate:
          type: string
          description: Birth date
          format: date
        personTitle:
          description: Person title
          $ref: '#/components/schemas/EnumValue'
        officialRegistration:
          type: string
          description: Official registration
          example: 20009280 0000
        countryOfBirth:
          description: The country of birth
          $ref: '#/components/schemas/Country'
        residencyStatus:
          description: Residency Status
          $ref: '#/components/schemas/EnumValue'
        housingTenure:
          description: The housing tenure of the person
          $ref: '#/components/schemas/EnumValue'
        dynamicAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DynamicAttributeValue'
          description: A map of dynamic attributes
      description: Individual person of customer
    SectorCodeInfo:
      type: object
      properties:
        sectorCode:
          type: string
          description: Sector code
          example: "0020"
        description:
          type: string
          description: Description of the sector code
          example: Gastronomie
        dynamicAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DynamicAttributeValue'
          description: A map of dynamic attributes
      description: Sector code information
    CreateCustomerRequest:
      required:
      - internetReferences
      - legalEntity
      type: object
      properties:
        name:
          type: string
          description: "Company name. Property optional only for individual customers,\
            \ required for non individual customers e.g. Organization"
          example: Company Co
        officialRegistration:
          type: string
          description: Official registration
          example: 20009280 0000
        vatNumber:
          type: string
          description: VAT number
          example: BE1234567891
        establishmentDate:
          type: string
          description: Establishment date
          format: date
          example: 2008-07-08
        taxLiability:
          description: Tax liability
          $ref: '#/components/schemas/EnumValue'
        legalEntity:
          description: Legal entity
          $ref: '#/components/schemas/EnumValue'
        individualPerson:
          description: "Individual Person, required when legal entity is an individual\
            \ or sole trader"
          $ref: '#/components/schemas/IndividualPersonRequest'
        reference:
          type: string
          description: Additional customer reference. Typically used for mapping to
            other systems.
          example: "100000008"
        placeOfBirth:
          type: string
          description: Deprecated since 2022-08-12 and version '1.60.0' in favor of
            'individualPerson.placeOfBirth'
          example: Munich
        addresses:
          type: array
          description: A list of addresses
          items:
            $ref: '#/components/schemas/AddressRequest'
        phoneNumbers:
          type: array
          description: A list of phone numbers
          items:
            $ref: '#/components/schemas/PhoneNumberRequest'
        internetReferences:
          type: array
          description: A list of internet references
          items:
            $ref: '#/components/schemas/InternetReferenceRequest'
        brokerCompanyId:
          type: string
          description: Broker company ID to which the customer is linked
          example: "123145345"
        sectorCode:
          type: string
          description: The sector code field in which to store the industrial sector
            classification code
          example: NAICS
        carFleetSize:
          type: integer
          description: Car fleet size
          format: int32
          example: 20
        commercialFleetSize:
          type: integer
          description: Commercial fleet size
          format: int32
          example: 15
        dynamicAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SimpleDynamicAttributeValue'
          description: A map of dynamic attributes
        knowYourCustomerSource:
          description: The enumeration value that identifies how the leasing company
            got into contact with the prospect/customer
          $ref: '#/components/schemas/SimpleEnumValue'
    IndividualPersonRequest:
      required:
      - lastName
      - personTitle
      type: object
      properties:
        firstName:
          type: string
          description: First name
          example: Adam
        middleName:
          type: string
          description: Middle name
          example: Paul
        maidenName:
          type: string
          description: Maiden name
          example: Black
        maidenMiddleName:
          type: string
          description: Maiden middle name
          example: Ronald
        maidenSecondLastName:
          type: string
          description: Maiden second last name
          example: McDonald
        lastName:
          type: string
          description: Last name
          example: Smith
        secondLastName:
          type: string
          description: Second last name
          example: Lopez
        initials:
          type: string
          description: Initials
          example: A.S.
        birthDate:
          type: string
          description: Birth date
          format: date
          example: 1988-08-08
        country:
          maxLength: 3
          minLength: 2
          type: string
          description: Country
          format: ISO3166-1 alpha-2 or ISO3166-1 alpha-3
          example: BE
        language:
          maxLength: 3
          minLength: 2
          type: string
          description: Language
          format: ISO 639-1 alpha-2 or ISO 639-1 alpha-3
          example: be
        numberOfDependents:
          minimum: 0
          type: integer
          description: The number of people dependent on the person
          format: int32
          example: 2
        placeOfBirth:
          type: string
          description: A person's place of birth
          example: Munich
        officialRegistration:
          type: string
          description: Official registration
          example: 20009280 0000
        personTitle:
          description: Person title
          $ref: '#/components/schemas/SimpleEnumValue'
        gender:
          description: Gender
          $ref: '#/components/schemas/SimpleEnumValue'
        dynamicAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SimpleDynamicAttributeValue'
          description: A map of dynamic attributes
        maritalStatus:
          description: "Deprecated since 2022-11-02 and version 1.68.0, should not\
            \ be used"
          $ref: '#/components/schemas/SimpleEnumValue'
        countryOfBirth:
          maxLength: 3
          minLength: 2
          pattern: "^([A-Za-z]{2,3})?$"
          type: string
          description: The country of birth code
          format: ISO3166-1 alpha-2 or ISO3166-1 alpha-3
          example: BE
        residencyStatus:
          description: The residency status of the person
          $ref: '#/components/schemas/SimpleEnumValue'
        housingTenure:
          description: The housing tenure of the person
          $ref: '#/components/schemas/SimpleEnumValue'
      description: "Individual Person, required when legal entity is an individual\
        \ or sole trader"
    CreateTargetGroupRequest:
      required:
      - customerGroups
      type: object
      properties:
        customerGroups:
          type: array
          description: A list of customer group IDs
          items:
            $ref: '#/components/schemas/SimpleEnumValue'
    Customer:
      type: object
      properties:
        customerId:
          type: string
          description: The ID of the customer
          example: "41199698"
        tradingName:
          type: string
          description: Trading name
          example: John Doe
        legalName:
          type: string
          description: Legal name
          example: John Doe Inc
        officialRegistration:
          type: string
          description: Official registration
          example: 404.484.060
        vatNumber:
          type: string
          description: VAT number
          example: "41199698"
        establishmentDate:
          type: string
          description: Establishment date
          format: date
        legalEntity:
          description: Legal entity
          $ref: '#/components/schemas/EnumValue'
        taxLiability:
          description: Tax liability
          $ref: '#/components/schemas/EnumValue'
        customerState:
          description: The state of the customer
          $ref: '#/components/schemas/EnumValue'
        individualPerson:
          description: Individual person of customer
          $ref: '#/components/schemas/IndividualPerson'
        phoneNumbers:
          type: array
          description: A list of phone numbers
          items:
            $ref: '#/components/schemas/PhoneNumber'
        addresses:
          type: array
          description: A list of customer contact addresses
          items:
            $ref: '#/components/schemas/ContactAddress'
        internetReferences:
          type: array
          description: A list of internet references
          items:
            $ref: '#/components/schemas/InternetReference'
        sectorCodeInfo:
          description: Sector code information
          $ref: '#/components/schemas/SectorCodeInfo'
        dynamicAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DynamicAttributeValue'
          description: A map of dynamic attributes
        companyGroupReference:
          type: string
          description: Internal company code
          example: "1234"
        carFleetSize:
          type: integer
          description: Car fleet size
          format: int32
          example: 20
        commercialFleetSize:
          type: integer
          description: Commercial fleet size
          format: int32
          example: 15
        knowYourCustomerSource:
          description: The enumeration value that identifies how the leasing company
            got into contact with the prospect/customer
          $ref: '#/components/schemas/EnumValue'
      description: The attached customer
    PEP:
      type: object
      properties:
        exposed:
          type: boolean
          description: Indicates wether the user is politically exposed
          example: false
        pepDepositId:
          type: string
          description: The PEP deposit ID
          example: "123456"
      description: The attached politically exposed person
    Person:
      type: object
      properties:
        personId:
          type: string
          description: The ID of the person
          example: "600001"
        firstName:
          type: string
          description: First name
          example: John
        lastName:
          type: string
          description: Last name
          example: Smith
        secondLastName:
          type: string
          description: Second last name
          example: Lopez
        placeOfBirth:
          type: string
          description: The place of birth
          example: Brussels
        dateOfBirth:
          type: string
          description: Date of birth
          format: date
        personTitle:
          description: The title of the person
          $ref: '#/components/schemas/EnumValue'
        gender:
          description: Gender of the person
          $ref: '#/components/schemas/EnumValue'
        officialRegistration:
          type: string
          description: The official registration of the person
          example: 36468213B
        country:
          description: Country
          $ref: '#/components/schemas/Country'
        dynamicAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DynamicAttributeValue'
          description: A map of dynamic attributes
      description: The attached person
    UBO:
      type: object
      properties:
        depositId:
          type: string
          description: The ID of the deposit
          example: "556712"
        validToDate:
          type: string
          description: "The date until which the UBO is valid, provided date included/excluded"
          format: date
        depositType:
          description: The type of the deposit
          $ref: '#/components/schemas/EnumValue'
        person:
          description: The attached person
          $ref: '#/components/schemas/Person'
        contact:
          description: The attached contact
          $ref: '#/components/schemas/UBOContact'
        customer:
          description: The attached customer
          $ref: '#/components/schemas/Customer'
        politicallyExposedPerson:
          description: The attached politically exposed person
          $ref: '#/components/schemas/PEP'
        addresses:
          type: array
          description: A list of contact addresses
          items:
            $ref: '#/components/schemas/ContactAddress'
        phoneNumbers:
          type: array
          description: A list of phone numbers
          items:
            $ref: '#/components/schemas/PhoneNumber'
        internetReferences:
          type: array
          description: A list of internet references
          items:
            $ref: '#/components/schemas/InternetReference'
    UBOContact:
      type: object
      properties:
        contactId:
          type: string
          description: The ID of the contact
          example: "433157"
        dynamicAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DynamicAttributeValue'
          description: A map of dynamic attributes
      description: The attached contact
    CreatePersonRequest:
      type: object
      properties:
        firstName:
          type: string
          description: First name
          example: John
        lastName:
          type: string
          description: Last name
          example: Smith
        secondLastName:
          type: string
          description: Second last name
          example: Lopez
        maidenName:
          type: string
          description: Maiden name
          example: Black
        maidenMiddleName:
          type: string
          description: Maiden middle name
          example: Ronald
        maidenSecondLastName:
          type: string
          description: Maiden second last name
          example: McDonald
        placeOfBirth:
          type: string
          description: The place of birth
          example: Brussels
        dateOfBirth:
          type: string
          description: Date of birth
          format: date
        personTitle:
          description: The title of the person
          $ref: '#/components/schemas/EnumValue'
        gender:
          description: Gender of the person
          $ref: '#/components/schemas/EnumValue'
        country:
          description: Country
          $ref: '#/components/schemas/Country'
        officialRegistration:
          type: string
          description: The official registration of the person
          example: 36468213B
        dynamicAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SimpleDynamicAttributeValue'
          description: A map of dynamic attributes
      description: The request to create a person
    CreateUBORequest:
      type: object
      properties:
        politicalExposed:
          type: boolean
          description: Indicates whether the UBO is politically exposed
          example: false
        person:
          description: The request to create a person
          $ref: '#/components/schemas/CreatePersonRequest'
        addresses:
          type: array
          description: A list of addresses
          items:
            $ref: '#/components/schemas/AddressRequest'
        phoneNumbers:
          type: array
          description: A list of phone numbers
          items:
            $ref: '#/components/schemas/PhoneNumberRequest'
        internetReferences:
          type: array
          description: A list of internet references
          items:
            $ref: '#/components/schemas/InternetReferenceRequest'
        dynamicAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SimpleDynamicAttributeValue'
          description: A map of dynamic attributes for the UBO contact
    FindAccountManager:
      type: object
      properties:
        accountManagerId:
          type: string
          description: The ID of the account manager
          example: "123456"
        identification:
          type: string
          description: The identification
          example: Mr.
        firstName:
          type: string
          description: The first name of the account manager
          example: John
        middleName:
          type: string
          description: The middle name of the account manager
          example: Douglas
        lastName:
          type: string
          description: The last name of the account manager
          example: Doe
        maidenName:
          type: string
          description: Maiden name of the account manager
          example: Dane
        maidenMiddleName:
          type: string
          description: Maiden middle name of the account manager
          example: Ronald
        maidenSecondLastName:
          type: string
          description: Maiden second last name of the account manager
          example: McDonald
        employeeNumber:
          type: string
          description: The employee number of the account manager
          example: "24"
        jobTitle:
          type: string
          description: The job title of the account manager
          example: Manager
        phoneNumbers:
          type: array
          description: A list of phone numbers
          items:
            $ref: '#/components/schemas/PhoneNumber'
        internetReferences:
          type: array
          description: A list of internet references
          items:
            $ref: '#/components/schemas/InternetReference'
        addresses:
          type: array
          description: A list of contact addresses
          items:
            $ref: '#/components/schemas/ContactAddress'
        customers:
          type: array
          description: A list of customer references
          items:
            $ref: '#/components/schemas/CustomerReference'
        personTitle:
          description: The person title of the account manager
          $ref: '#/components/schemas/EnumValue'
        managerType:
          description: The manager type of the account manager
          $ref: '#/components/schemas/EnumValue'
      description: Account manager
    FindAccountManagersResponse:
      type: object
      properties:
        accountManagers:
          type: array
          description: A list of account managers
          items:
            $ref: '#/components/schemas/FindAccountManager'
        totalCount:
          type: integer
          description: The number of account managers that qualify for the filters
          format: int64
    AttachedCustomerDocument:
      type: object
      properties:
        documentId:
          type: string
          description: The ID of the document
          example: "2147484530"
        fileType:
          type: string
          description: The type of the document
          example: pdf
        creationDate:
          type: string
          description: The creation date of the document
          format: date
        name:
          description: The name of the document
          $ref: '#/components/schemas/MultiLanguageValue'
        description:
          description: A short description of the document
          $ref: '#/components/schemas/MultiLanguageValue'
      description: Attached customer document
    FindAttachedCustomerDocumentsResponse:
      type: object
      properties:
        attachedCustomerDocuments:
          type: array
          description: List of attached customer documents
          items:
            $ref: '#/components/schemas/AttachedCustomerDocument'
        totalCount:
          type: integer
          description: Number of retrieved documents
          format: int64
          example: 2
    AttachedUBODocument:
      type: object
      properties:
        depositId:
          type: string
        documentId:
          type: string
        name:
          $ref: '#/components/schemas/MultiLanguageValue'
        documentType:
          type: string
        documentTemplateId:
          type: string
        description:
          $ref: '#/components/schemas/MultiLanguageValue'
      description: Attached UBO document
    FindAttachedUBODocumentsResponse:
      type: object
      properties:
        documents:
          type: array
          description: A list of attached UBO documents
          items:
            $ref: '#/components/schemas/AttachedUBODocument'
        totalCount:
          type: integer
          description: The number of attached UBOs that are returned
          format: int64
          example: 10
    FindBrokerCompany:
      type: object
      properties:
        brokerCompanyId:
          type: string
          description: ID of the broker company
          example: "500003"
        tradingName:
          type: string
          description: Trading name
          example: John Doe Inc
      description: Broker company
    FindBrokerCompanyResponse:
      type: object
      properties:
        brokerCompanies:
          type: array
          description: A list of broker companies
          items:
            $ref: '#/components/schemas/FindBrokerCompany'
        totalCount:
          type: integer
          description: The number of broker companies that qualify for the filters
          format: int64
    ContactRole:
      type: object
      properties:
        contactRoleId:
          type: string
          description: The ID of the contact role
          example: "400022"
        description:
          description: The description of the contact role
          $ref: '#/components/schemas/MultiLanguageValue'
      description: The contact roles
    FindAddress:
      type: object
      properties:
        addressId:
          type: string
          description: The address ID
          example: "23287213"
        postalCode:
          type: string
          description: The postal code of the address
          example: "9000"
        city:
          description: The city of the address
          $ref: '#/components/schemas/MultiLanguageValue'
        formattedAddress:
          type: string
          description: The formatted address
          example: Leasingweg 1 1000 AA AMSTERDAM
      description: The address itself
    FindContact:
      type: object
      properties:
        contactId:
          type: string
          description: The ID of the contact
          example: "41199698"
        joinDate:
          type: string
          description: The date on which the contact started at the customer
          format: date
        leaveDate:
          type: string
          description: The date on which the contact left the customer
          format: date
        identification:
          type: string
          description: The identification of the contact
          example: "Bonenstaak, Jaak (R.)"
        jobTitle:
          type: string
          description: The job title of the contact
          example: Developer
        employeeNumber:
          type: string
          description: The employee number of the contact
          example: "007"
        comments:
          type: string
          description: The additional comments for the contact
          example: Important client
        person:
          description: The person linked to the contact
          $ref: '#/components/schemas/FindContactPerson'
        officialRegistration:
          type: string
          description: The official registration of the contact
          example: 36468213B
        addresses:
          type: array
          description: A list of addresses
          items:
            $ref: '#/components/schemas/FindContactAddress'
        phoneNumbers:
          type: array
          description: A list of phone numbers
          items:
            $ref: '#/components/schemas/FindPhoneNumber'
        internetReferences:
          type: array
          description: A list of internet references
          items:
            $ref: '#/components/schemas/InternetReference'
        contactRoles:
          type: array
          description: A list of contact roles
          items:
            $ref: '#/components/schemas/ContactRole'
        dynamicAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DynamicAttributeValue'
          description: A map of dynamic attributes
      description: A contact
    FindContactAddress:
      type: object
      properties:
        label:
          description: The label of the contact address
          $ref: '#/components/schemas/EnumValue'
        address:
          description: The address itself
          $ref: '#/components/schemas/FindAddress'
      description: Customer contact address
    FindContactPerson:
      type: object
      properties:
        firstName:
          type: string
          description: The first name
          example: John
        lastName:
          type: string
          description: The last name
          example: Smith
        secondLastName:
          type: string
          description: The second last name
          example: Lopez
        maidenName:
          type: string
          description: Maiden name
          example: Dane
        maidenMiddleName:
          type: string
          description: Maiden middle name
          example: Ronald
        maidenSecondLastName:
          type: string
          description: Maiden second last name
          example: McDonald
        placeOfBirth:
          type: string
          description: The place of birth
          example: Brussels
        dateOfBirth:
          type: string
          description: The date of birth
          format: date
        personTitle:
          description: The person title
          $ref: '#/components/schemas/EnumValue'
        gender:
          description: The gender of the person
          $ref: '#/components/schemas/EnumValue'
        country:
          description: The country
          $ref: '#/components/schemas/Country'
      description: The person linked to the contact
    FindContactsResponse:
      type: object
      properties:
        contacts:
          type: array
          description: The paginated list of contacts that applies for the provided
            filters
          items:
            $ref: '#/components/schemas/FindContact'
        totalCount:
          type: integer
          description: The number of contacts that apply for the provided filters
          format: int64
          example: 25
    FindPhoneNumber:
      type: object
      properties:
        phoneNumberId:
          type: string
          description: The ID of the phone number
          example: "41199698"
        formattedPhoneNumber:
          type: string
          description: The formatted phone number
          example: "0032474002342"
        zonalPhoneNumber:
          type: string
          description: The zonal phone number
          example: "024"
        localPhoneNumber:
          type: string
          description: The local phone number
          example: "2474002342"
        phoneNumberType:
          description: The type of the phone number
          $ref: '#/components/schemas/EnumValue'
        country:
          description: The country of the phone number
          $ref: '#/components/schemas/Country'
      description: Phone number
    BrokerCompanyCustomer:
      type: object
      properties:
        customerId:
          type: string
          description: The customer ID
          example: "100001"
        tradingName:
          type: string
          description: The trading name of the customer
          example: My Brilliant Company
        reference:
          type: string
          description: The reference of the customer
          example: Reference 1
        brokerCompanies:
          type: array
          description: The filtered list of broker companies linked to this customer
          items:
            $ref: '#/components/schemas/BrokerCompanyReference'
      description: A customer with broker companies
    FindCustomerBrokerCompaniesResponse:
      type: object
      properties:
        customers:
          type: array
          description: The paginated list of customers with broker companies that
            applies for the provided filters
          items:
            $ref: '#/components/schemas/BrokerCompanyCustomer'
        totalCount:
          type: integer
          description: The number of customers that apply for the provided filters
          format: int64
          example: 25
    CustomerContactAddress:
      type: object
      properties:
        label:
          description: The label of the contact address
          $ref: '#/components/schemas/EnumValue'
        address:
          description: The address itself
          $ref: '#/components/schemas/Address'
    DefaultPhoneNumber:
      type: object
      properties:
        phoneNumberId:
          type: string
          description: The ID of the phone number
          example: "41199698"
        zonalPhoneNumber:
          type: string
          description: The zonal phone number
          example: "024"
        localPhoneNumber:
          type: string
          description: The local phone number
          example: "2474002342"
        formattedPhoneNumber:
          type: string
          description: The formatted phone number
          example: +32474002342
        phoneNumberType:
          description: The type of the phone number
          $ref: '#/components/schemas/EnumValue'
        country:
          description: The country of the phone number
          $ref: '#/components/schemas/Country'
      description: Use phoneNumbers instead
      deprecated: true
    EmailAddress:
      type: object
      properties:
        emailId:
          type: string
          description: "The ID of the email address, also called the ID of the internet\
            \ reference"
          example: "600146"
        url:
          type: string
          description: The email address
          format: email
          example: example@example.com
      description: Use internetReferences instead
      deprecated: true
    FindCustomer:
      type: object
      properties:
        customerId:
          type: string
          description: The ID of the customer
          example: "41199698"
        businessUnitLegalName:
          type: string
          description: The business unit legal name
          example: John Doe Inc
        tradingName:
          type: string
          description: Trading name
          example: John Doe Inc
        vatNumber:
          type: string
          description: VAT number
          example: "41199698"
        reference:
          type: string
          description: Reference
          example: "15568845"
        officialRegistration:
          type: string
          description: Official registration
          example: 404.484.060
        legalEntity:
          description: Legal entity
          $ref: '#/components/schemas/EnumValue'
        isFleetCustomer:
          type: boolean
          description: Whether the customer is a fleet customer
        isFleetManagerAssigned:
          type: boolean
          description: Whether the customer has a fleet manager assigned
        phoneNumbers:
          type: array
          description: A list of phone numbers
          items:
            $ref: '#/components/schemas/FindPhoneNumber'
        addresses:
          type: array
          description: A list of customer contact addresses
          items:
            $ref: '#/components/schemas/FindContactAddress'
        internetReferences:
          type: array
          description: A list of internet references
          items:
            $ref: '#/components/schemas/InternetReference'
        customerAddresses:
          type: array
          description: Deprecated since 2021-11-16 and version 1.37.0 in favor of
            addresses
          deprecated: true
          items:
            $ref: '#/components/schemas/CustomerContactAddress'
        primaryAddress:
          description: Use addresses instead
          $ref: '#/components/schemas/PrimaryAddress'
        defaultPhoneNumber:
          description: Use phoneNumbers instead
          $ref: '#/components/schemas/DefaultPhoneNumber'
        email:
          description: Use internetReferences instead
          $ref: '#/components/schemas/EmailAddress'
        individualPerson:
          description: Primary contact person
          $ref: '#/components/schemas/PersonReference'
        dynamicAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DynamicAttributeValue'
          description: A map of dynamic attributes
    FindCustomersResponse:
      type: object
      properties:
        customers:
          type: array
          items:
            $ref: '#/components/schemas/FindCustomer'
        totalCount:
          type: integer
          format: int64
    PersonReference:
      type: object
      properties:
        firstName:
          type: string
          description: First name
          example: John
        lastName:
          type: string
          description: Last name
          example: Doe
        secondLastName:
          type: string
          description: Second last name
          example: Doe
        dateOfBirth:
          type: string
          description: Date of birth
          format: date
      description: Primary contact person
    PrimaryAddress:
      type: object
      properties:
        addressId:
          type: string
          description: The ID of the address
          example: "23287213"
        formattedAddress:
          type: string
          description: The formatted address
          example: Leasingweg 1 1000 AA AMSTERDAM
      description: Use addresses instead
      deprecated: true
    SortBy:
      type: object
      properties:
        key:
          type: string
        order:
          type: string
          enum:
          - ASC
          - DESC
    ContactCategory:
      type: object
      properties:
        contactCategoryId:
          type: string
        name:
          $ref: '#/components/schemas/MultiLanguageValue'
      description: Contact category
    FindDriver:
      type: object
      properties:
        driverId:
          type: string
          description: The ID of the driver
          example: "41199698"
        identification:
          type: string
          description: The identification of the driver
          example: John Doe
        personTitle:
          description: The person title of the driver
          $ref: '#/components/schemas/EnumValue'
        firstName:
          type: string
          description: The first name of the driver
          example: John
        middleName:
          type: string
          description: The middle name of the driver
          example: Jane
        lastName:
          type: string
          description: The last name of the driver
          example: Doe
        maidenName:
          type: string
          description: Maiden name of the driver
          example: Dane
        maidenMiddleName:
          type: string
          description: Maiden middle name of the driver
          example: Ronald
        maidenSecondLastName:
          type: string
          description: Maiden second last name of the driver
          example: McDonald
        employeeNumber:
          type: string
          description: The employee number of the driver
          example: PD-001
        jobTitle:
          type: string
          description: The job title of the driver
          example: CEO
        signOn:
          type: string
          description: The sign-on ID of the driver
          example: john.doe@company.com
        expired:
          type: boolean
          description: Indicates wether the driver has left the company
          example: false
          deprecated: true
        accountExpired:
          type: boolean
          description: Indicates wether the driver has left the company
          example: false
        contactCategories:
          type: array
          description: A list of contact categories
          items:
            $ref: '#/components/schemas/ContactCategory'
        user:
          type: array
          description: A list of users
          items:
            $ref: '#/components/schemas/User'
    FindDriversResponse:
      type: object
      properties:
        drivers:
          type: array
          items:
            $ref: '#/components/schemas/FindDriver'
        totalCount:
          type: integer
          format: int64
    User:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user
          example: "123456"
        signon:
          type: string
          description: The sign-on ID of the user
          example: john.doe@company.com
      description: User
    FindFleetManager:
      type: object
      properties:
        managerId:
          type: string
          description: The ID of the fleet manager
          example: "41199698"
        identification:
          type: string
          description: The identification of the fleet manager
          example: John Doe
        personTitle:
          description: The person title of the fleet manager
          $ref: '#/components/schemas/EnumValue'
        firstName:
          type: string
          description: The first name of the fleet manager
          example: John
        middleName:
          type: string
          description: The middle name of the fleet manager
          example: Jane
        lastName:
          type: string
          description: The last name of the fleet manager
          example: Doe
        maidenName:
          type: string
          description: Maiden name of the fleet manager
          example: Dane
        maidenMiddleName:
          type: string
          description: Maiden middle name of the fleet manager
          example: Ronald
        maidenSecondLastName:
          type: string
          description: Maiden second last name of the fleet manager
          example: McDonald
        employeeNumber:
          type: string
          description: The employee number of the fleet manager
          example: PD-001
        jobTitle:
          type: string
          description: The job title of the fleet manager
          example: CEO
        signOn:
          type: string
          description: The sign-on ID of the fleet manager
          example: john.doe@company.com
        expired:
          type: boolean
          description: Indicates wether the fleet manager has left the company
          example: false
          deprecated: true
        accountExpired:
          type: boolean
          description: Indicates wether the fleet manager has left the company
          example: false
        user:
          type: array
          description: A list of users
          items:
            $ref: '#/components/schemas/User'
      description: Fleet manager
    FindFleetManagersResponse:
      type: object
      properties:
        fleetManagers:
          type: array
          description: A list of fleet managers
          items:
            $ref: '#/components/schemas/FindFleetManager'
        totalCount:
          type: integer
          description: The number of fleet managers that are returned
          format: int64
          example: 15
    FindSite:
      type: object
      properties:
        siteId:
          type: string
          description: The site ID
          example: "100001"
        name:
          type: string
          description: The site name
          example: account 1
        reference:
          type: string
          description: The site reference
          example: reference 1
        siteType:
          description: The site type
          $ref: '#/components/schemas/EnumValue'
        customer:
          description: The customer linked to the site
          $ref: '#/components/schemas/CustomerReference'
        addresses:
          type: array
          description: A list of addresses
          items:
            $ref: '#/components/schemas/ContactAddress'
        phoneNumbers:
          type: array
          description: A list of phone numbers
          items:
            $ref: '#/components/schemas/PhoneNumber'
        internetReferences:
          type: array
          description: A list of internet references
          items:
            $ref: '#/components/schemas/InternetReference'
        dynamicAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DynamicAttributeValue'
          description: A map of dynamic attributes
      description: Sites
    FindSitesResponse:
      type: object
      properties:
        sites:
          type: array
          description: A list of sites
          items:
            $ref: '#/components/schemas/FindSite'
        totalCount:
          type: integer
          description: The number of sites that qualify for the filters
          format: int64
    FindPerson:
      type: object
      properties:
        personId:
          type: string
          description: The ID of the person
          example: "123456"
        firstName:
          type: string
          description: The first name of the person
          example: Tim
        lastName:
          type: string
          description: The last name of the person
          example: Tempels
        maidenName:
          type: string
          description: Maiden name of the person
          example: Dane
        maidenMiddleName:
          type: string
          description: Maiden middle name of the person
          example: Ronald
        maidenSecondLastName:
          type: string
          description: Maiden second last name of the person
          example: McDonald
        placeOfBirth:
          type: string
          description: The place of birth the person
          example: BELGIUM
        dateOfBirth:
          type: string
          description: The date of birth the person
          format: date
          example: 2008-07-28
        personTitle:
          description: The title of the person
          $ref: '#/components/schemas/EnumValue'
        gender:
          description: The gender of the person
          $ref: '#/components/schemas/EnumValue'
        officialRegistration:
          type: string
          description: The official registration of the person
          example: 36468213B
        dynamicAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DynamicAttributeValue'
          description: A map of dynamic attributes
      description: The person related to the UBO
    FindUBO:
      type: object
      properties:
        depositId:
          type: string
          description: The ID of the deposit
          example: "123456"
        validToDate:
          type: string
          description: The validity date until of the UBO
          format: date
          example: 2008-07-28
        depositType:
          description: The deposit type of the UBO
          $ref: '#/components/schemas/EnumValue'
        contact:
          description: The contact related to the UBO
          $ref: '#/components/schemas/UBOContact'
        person:
          description: The person related to the UBO
          $ref: '#/components/schemas/FindPerson'
        politicallyExposedPerson:
          description: Whether the person of this UBO is politically exposed
          $ref: '#/components/schemas/PEP'
      description: UBO
    FindUBOsResponse:
      type: object
      properties:
        ubos:
          type: array
          description: A list of UBO's
          items:
            $ref: '#/components/schemas/FindUBO'
        totalCount:
          type: integer
          description: The number of UBOs that are returned
          format: int64
          example: 10
    AccountManager:
      type: object
      properties:
        accountManagerId:
          type: string
          description: The ID of the account manager
          example: "1234"
        comments:
          type: string
          description: The comments on the account manager
          example: comment
        identification:
          type: string
          description: The identification of the account manager
          example: John Doe
        dateOfBirth:
          type: string
          description: The date of birth of the account manager
          format: date
        firstName:
          type: string
          description: The first name of the account manager
          example: John
        lastName:
          type: string
          description: The last name of the account manager
          example: Doe
        middleName:
          type: string
          description: The middle name of the account manager
          example: Jane
        maidenName:
          type: string
          description: Maiden name of the account manager
          example: Dane
        maidenMiddleName:
          type: string
          description: Maiden middle name of the account manager
          example: Ronald
        maidenSecondLastName:
          type: string
          description: Maiden second last name of the account manager
          example: McDonald
        searchKey:
          type: string
          description: The search key of the account manager
          example: Jane
        employeeNumber:
          type: string
          description: The employee number of the account manager
          example: "4567"
        jobTitle:
          type: string
          description: The job title of the account manager
          example: Assistant manager
        personTitle:
          description: The person title of the account manager
          $ref: '#/components/schemas/EnumValue'
        communicationMedium:
          description: The communication medium of the account manager
          $ref: '#/components/schemas/EnumValue'
        gender:
          description: The gender of the account manager
          $ref: '#/components/schemas/EnumValue'
        managerType:
          description: The manager type of the account manager
          $ref: '#/components/schemas/EnumValue'
        language:
          description: The language of the account manager
          $ref: '#/components/schemas/Language'
        unitAccount:
          description: The unit account of the account manager
          $ref: '#/components/schemas/UnitAccount'
        country:
          description: The country of the account manager
          $ref: '#/components/schemas/Country'
        userAccount:
          description: The user account of the account manager
          $ref: '#/components/schemas/UserAccount'
        phoneNumbers:
          type: array
          description: A list of phone numbers
          items:
            $ref: '#/components/schemas/PhoneNumber'
        internetReferences:
          type: array
          description: A list of internet references
          items:
            $ref: '#/components/schemas/InternetReference'
        addresses:
          type: array
          description: A list of addressses
          items:
            $ref: '#/components/schemas/ContactAddress'
        customers:
          type: array
          description: A list of customers
          items:
            $ref: '#/components/schemas/CustomerReference'
        managedCustomers:
          type: array
          description: A list of managed customer
          items:
            $ref: '#/components/schemas/ManagedCustomer'
        contactCategories:
          type: array
          description: A list of contact categories
          items:
            $ref: '#/components/schemas/ContactCategoryReference'
    ContactCategoryReference:
      type: object
      properties:
        contactCategoryId:
          type: string
          description: The ID of the contact category
          example: "123456"
      description: The contact category of the account manager
    Language:
      type: object
      properties:
        languageId:
          type: string
          description: The ID of the language
          example: "2147599982"
        reference:
          type: string
          description: The reference of the language
          example: nl
        description:
          type: string
          description: The description of the language
          example: Dutch
        translatedDescription:
          description: The description as a translatable value
          $ref: '#/components/schemas/MultiLanguageValue'
        languageCodeIso2:
          type: string
          description: Language code
          format: ISO 639-1 alpha-2
          example: en
        languageCodeIso3:
          type: string
          description: Language code
          format: ISO 639-1 alpha-3
          example: eng
      description: Language
    ManagedCustomer:
      type: object
      properties:
        managedCustomerId:
          type: string
          description: The managed customer ID
          example: "100001"
        managerType:
          description: The manager type
          $ref: '#/components/schemas/EnumValue'
        validFrom:
          type: string
          description: Valid from date
          format: date
        validTo:
          type: string
          description: Valid to date
          format: date
        vehicleNature:
          description: Vehicle nature
          $ref: '#/components/schemas/EnumValue'
        unitAccount:
          description: The unit account for this managed customer
          $ref: '#/components/schemas/UnitAccount'
        customer:
          description: The customer reference for this managed customer
          $ref: '#/components/schemas/CustomerReference'
      description: The managed customer of the account manager
    UnitAccount:
      type: object
      properties:
        unitAccountId:
          type: string
          description: The ID of unit account
          example: "2147599982"
        name:
          type: string
          description: The unit account name
          example: My Great Company Unit
        unitAccountType:
          description: The unit account type
          $ref: '#/components/schemas/EnumValue'
      description: The unit account for this managed customer
    UserAccount:
      type: object
      properties:
        userAccountId:
          type: string
          description: The user account ID
          example: "100001"
        expired:
          type: boolean
          description: Is this user account expired
          example: false
        signOnId:
          type: string
          description: Sign on ID for this user account
          example: john.doe@sofico.be
      description: The user account of the account manager
    CompanyCustomer:
      type: object
      properties:
        customerId:
          type: string
          description: The ID of the customer
          example: "40000005"
        tradingName:
          type: string
          description: Trading name
          example: Trading Name
        legalName:
          type: string
          description: Legal name
          example: Legal name
        officialRegistration:
          type: string
          description: Official registration
          example: "12345678901234"
        vatNumber:
          type: string
          description: VAT number
          example: "123456778"
        establishmentDate:
          type: string
          description: Establishment date
          format: date
        legalEntity:
          description: Legal entity
          $ref: '#/components/schemas/EnumValue'
        sectorCodeInfo:
          description: Sector code information
          $ref: '#/components/schemas/SectorCodeInfo'
        phoneNumbers:
          type: array
          description: A list of phone numbers
          items:
            $ref: '#/components/schemas/PhoneNumber'
        addresses:
          type: array
          description: A list of customer contact addresses
          items:
            $ref: '#/components/schemas/ContactAddress'
        internetReferences:
          type: array
          description: A list of internet references
          items:
            $ref: '#/components/schemas/InternetReference'
        dynamicAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DynamicAttributeValue'
          description: A map of dynamic attributes
    FindConsentResponse:
      type: object
      properties:
        consents:
          type: array
          description: A list of consents
          items:
            $ref: '#/components/schemas/Consent'
        totalAmount:
          type: integer
          description: Use totalCount instead
          format: int64
        totalCount:
          type: integer
          description: The total number of consents
          format: int64
    FindBankAccountsResponse:
      type: object
      properties:
        bankAccounts:
          type: array
          description: A list of bank accounts
          items:
            $ref: '#/components/schemas/BankAccount'
        totalCount:
          type: integer
          description: The number of bank accounts that qualify for the filters
          format: int64
    FindPaymentPreferencesResponse:
      type: object
      properties:
        paymentPreferences:
          type: array
          description: A list of payment preferences
          items:
            $ref: '#/components/schemas/PaymentPreference'
        totalCount:
          type: integer
          description: The number of bank accounts that qualify for the filters
          format: int64
    LegalEntityGroup:
      type: object
      properties:
        referenceCustomerId:
          type: string
          description: The ID of the referenced customer
        legalEntity:
          description: The legal entity of the group
          $ref: '#/components/schemas/EnumValue'
      description: Legal entity group
    LegalEntityGroupsResponse:
      type: object
      properties:
        legalEntityGroups:
          type: array
          description: The list of legal entity groups configured
          items:
            $ref: '#/components/schemas/LegalEntityGroup'
        totalCount:
          type: integer
          description: The amount of legal entity groups returned
          format: int64
    GetTargetGroupsResponse:
      type: object
      properties:
        targetGroups:
          type: array
          description: A list of target groups for the given customer ID
          items:
            $ref: '#/components/schemas/TargetGroup'
    TargetGroup:
      type: object
      properties:
        targetGroupId:
          type: string
          description: The target group ID
          example: "100001"
        customerId:
          type: string
          description: The customer ID
          example: "100001"
        customerGroup:
          description: The customer group
          $ref: '#/components/schemas/EnumValue'
      description: Target groups
    Filter:
      type: object
      properties:
        filterId:
          type: string
          description: The ID of the filter
          example: "114"
        filterValues:
          type: array
          description: The list of filter values
          items:
            $ref: '#/components/schemas/FilterValue'
      description: Filter
    FilterValue:
      type: object
      properties:
        filterValueId:
          type: string
          description: The ID of the filter value
          example: "200209"
        filterValueGroupId:
          type: string
          description: The ID of the filter value group
          example: "2051"
        description:
          description: The description of a filter value
          $ref: '#/components/schemas/MultiLanguageValue'
      description: Filter value
    ListFiltersResponse:
      type: object
      properties:
        filters:
          type: array
          description: The list of filters found
          items:
            $ref: '#/components/schemas/Filter'
        totalCount:
          type: integer
          description: The number of filters returned
          format: int64
    ContactAddressUpdateRequest:
      type: object
      properties:
        addressId:
          type: string
          description: The address ID
          example: "23287213"
        addressLine1:
          type: string
          description: The first address line
          example: Poel
        addressLine1Number:
          type: string
          description: The number of the first address line
          example: "5"
        addressLine2:
          type: string
          description: The second address line
          example: Poel
        addressLine3:
          type: string
          description: The third address line
          example: Poel
        addressLine4:
          type: string
          description: The fourth address line
          example: Poel
        addressLine5:
          type: string
          description: The fifth address line
          example: Poel
        addressType:
          description: The type of address
          $ref: '#/components/schemas/SimpleEnumValue'
        city:
          type: string
          description: The city of the address
          example: Gent
        postalCode:
          type: string
          description: The postal code of the address
          example: "9000"
        state:
          type: string
          description: The state of the address
          example: Oost-Vlaanderen
        country:
          maxLength: 3
          minLength: 2
          type: string
          description: The country code
          format: ISO3166-1 alpha-2 or ISO3166-1 alpha-3
          example: BE
        isDeleted:
          type: boolean
          description: Indicates whether the address needs to be deleted
          example: true
          default: false
      description: Contact address
    InternetReferenceUpdateRequest:
      type: object
      properties:
        internetReferenceId:
          type: string
          description: The internet reference ID
          example: "41199698"
        url:
          type: string
          description: The URL of the reference
          example: sofico@sofico.be
        internetReferenceType:
          description: The internet reference type
          $ref: '#/components/schemas/SimpleEnumValue'
        isDeleted:
          type: boolean
          description: Indicates whether the internet reference needs to be deleted
          example: true
          default: false
      description: Internet reference
    PhoneNumberUpdateRequest:
      type: object
      properties:
        phoneNumberId:
          type: string
          description: The ID of the phone number
          example: "41199698"
        country:
          maxLength: 3
          minLength: 2
          type: string
          description: The country code
          format: ISO3166-1 alpha-2 or ISO3166-1 alpha-3
          example: BE
        number:
          type: string
          description: The phone number
          example: "0474002342"
        zonalPhoneNumber:
          type: string
          description: The zonal phone number
          example: "352"
        phoneType:
          description: The type of phone number
          $ref: '#/components/schemas/SimpleEnumValue'
        isDeleted:
          type: boolean
          description: Indicates whether the phone number needs to be deleted
          example: true
          default: false
      description: Phone number
    UpdateContactRequest:
      type: object
      properties:
        joinDate:
          type: string
          description: The date on which the contact started at the customer
          format: date
        leaveDate:
          type: string
          description: The date on which the contact left the customer
          format: date
        identification:
          type: string
          description: Identification of the contact
          example: "Bonenstaak, Jaak (R.)"
        jobTitle:
          type: string
          description: Job title of the contact
          example: Developer
        employeeNumber:
          type: string
          description: Employee number of the contact
          example: "007"
        comments:
          type: string
          description: Additional comments for the contact
          example: Important client
        contactRoleIds:
          type: array
          description: A list of contact role IDs to be set on the contact
          items:
            type: string
            description: Contact role IDs
        person:
          description: The person linked to the contact
          $ref: '#/components/schemas/ContactPersonRequest'
        addresses:
          type: array
          description: A list of addresses
          items:
            $ref: '#/components/schemas/ContactAddressUpdateRequest'
        phoneNumbers:
          type: array
          description: A list of phone numbers
          items:
            $ref: '#/components/schemas/PhoneNumberUpdateRequest'
        internetReferences:
          type: array
          description: A list of internet references
          items:
            $ref: '#/components/schemas/InternetReferenceUpdateRequest'
        dynamicAttributes:
          type: array
          description: A map of dynamic attributes
          items:
            type: object
            additionalProperties:
              $ref: '#/components/schemas/SimpleDynamicAttributeValue'
            description: Dynamic attributes
    CustomerUpdateRequest:
      required:
      - legalEntity
      type: object
      properties:
        name:
          type: string
          description: Name
          example: John Doe Inc
        officialRegistration:
          type: string
          description: Official registration
          example: 404.484.060
        vatNumber:
          type: string
          description: VAT number
          example: "41199698"
        establishmentDate:
          type: string
          description: Establishment date
          format: date
          example: 2008-07-28
        legalEntity:
          description: Legal entity
          $ref: '#/components/schemas/SimpleEnumValue'
        taxLiability:
          description: Tax liability
          $ref: '#/components/schemas/SimpleEnumValue'
        individualPerson:
          description: Individual person of customer
          $ref: '#/components/schemas/IndividualPersonUpdateRequest'
        phoneNumbers:
          type: array
          description: A list of phone numbers
          items:
            $ref: '#/components/schemas/PhoneNumberUpdateRequest'
        addresses:
          type: array
          description: A list of addresses
          items:
            $ref: '#/components/schemas/ContactAddressUpdateRequest'
        internetReferences:
          type: array
          description: A list of internet references
          items:
            $ref: '#/components/schemas/InternetReferenceUpdateRequest'
        sectorCode:
          type: string
          description: Sector code
          example: "0020"
        carFleetSize:
          type: integer
          description: Car fleet size
          format: int32
          example: 20
        commercialFleetSize:
          type: integer
          description: Commercial fleet size
          format: int32
          example: 15
        dynamicAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SimpleDynamicAttributeValue'
          description: A map of dynamic attributes
        knowYourCustomerSource:
          description: The enumeration value that identifies how the leasing company
            got into contact with the prospect/customer
          $ref: '#/components/schemas/SimpleEnumValue'
    IndividualPersonUpdateRequest:
      required:
      - lastName
      - personId
      type: object
      properties:
        personId:
          type: string
          description: ID of the person
          example: "100099"
        firstName:
          type: string
          description: First name
          example: John
        middleName:
          type: string
          description: Middle name
          example: Fraser
        lastName:
          type: string
          description: Last name
          example: Doe
        secondLastName:
          type: string
          description: Second last name
          example: Lopez
        maidenName:
          type: string
          description: Maiden name
          example: Dane
        maidenMiddleName:
          type: string
          description: Maiden middle name
          example: Ronald
        maidenSecondLastName:
          type: string
          description: Maiden second last name
          example: McDonald
        initials:
          type: string
          description: Initials
          example: J.D.
        birthDate:
          type: string
          description: Birth date
          format: date
          example: 1996-05-12
        placeOfBirth:
          type: string
          description: Place of birth
          example: Munich
        numberOfDependents:
          type: integer
          description: The number of dependents
          format: int32
          example: 3
        gender:
          description: Gender
          $ref: '#/components/schemas/SimpleEnumValue'
        officialRegistration:
          type: string
          description: Official registration
          example: 404.484.060
        maritalStatus:
          description: "Deprecated since 2022-11-02 and version 1.68.0, should not\
            \ be used"
          $ref: '#/components/schemas/SimpleEnumValue'
        personTitle:
          description: Person title
          $ref: '#/components/schemas/SimpleEnumValue'
        country:
          maxLength: 3
          minLength: 2
          type: string
          description: The country code
          format: ISO3166-1 alpha-2 or ISO3166-1 alpha-3
          example: BE
        language:
          maxLength: 3
          minLength: 2
          type: string
          description: The language code
          format: ISO 639-1 alpha-2 or ISO 639-1 alpha-3
          example: nl
        dynamicAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SimpleDynamicAttributeValue'
          description: A map of dynamic attributes
        countryOfBirth:
          maxLength: 3
          minLength: 2
          pattern: "^([A-Za-z]{2,3})?$"
          type: string
          description: The country of birth code
          format: ISO3166-1 alpha-2 or ISO3166-1 alpha-3
          example: BE
        residencyStatus:
          description: The residency status of the person
          $ref: '#/components/schemas/SimpleEnumValue'
        housingTenure:
          description: The residency status of the person
          $ref: '#/components/schemas/SimpleEnumValue'
      description: Individual person of customer
    UpdateSiteRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the site
          example: Services
        reference:
          type: string
          description: Reference of the site
          example: Finance
        siteType:
          description: Site type
          $ref: '#/components/schemas/SimpleEnumValue'
        addresses:
          type: array
          description: A list of addresses
          items:
            $ref: '#/components/schemas/ContactAddressUpdateRequest'
        phoneNumbers:
          type: array
          description: A list of phone numbers
          items:
            $ref: '#/components/schemas/PhoneNumberUpdateRequest'
        internetReferences:
          type: array
          description: A list of internet references
          items:
            $ref: '#/components/schemas/InternetReferenceUpdateRequest'
        dynamicAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SimpleDynamicAttributeValue'
          description: A map of dynamic attributes
    UpdateUBORequest:
      type: object
      properties:
        contactId:
          type: string
          description: The ID of the contact
          example: "433157"
        politicalExposed:
          type: boolean
          description: Indicates wether the UBO is politically exposed
          example: false
        validToDate:
          type: string
          description: "The date until which the UBO is valid, provided date included/excluded"
          format: date
        person:
          description: The request to create a person
          $ref: '#/components/schemas/CreatePersonRequest'
        addresses:
          type: array
          description: A list of addresses
          items:
            $ref: '#/components/schemas/ContactAddressUpdateRequest'
        phoneNumbers:
          type: array
          description: A list of phone numbers
          items:
            $ref: '#/components/schemas/PhoneNumberUpdateRequest'
        internetReferences:
          type: array
          description: A list of internet references
          items:
            $ref: '#/components/schemas/InternetReferenceUpdateRequest'
        dynamicAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SimpleDynamicAttributeValue'
          description: A map of dynamic attributes for the UBO contact
    WithdrawConsentRequest:
      required:
      - consentIds
      type: object
      properties:
        consentIds:
          uniqueItems: true
          type: array
          description: A list of consent IDs
          items:
            type: string
            description: The consent ID
            example: "3981452"
    LeasingCompanyReference:
      type: object
      properties:
        leasingCompanyId:
          type: string
          description: The ID of the leasing company
          example: "100001"
      description: Leasing company
    M2MCustomer:
      type: object
      properties:
        customerId:
          type: string
          description: The ID of the customer
          example: "41199698"
        tradingName:
          type: string
          description: Trading name
          example: John Doe
        legalName:
          type: string
          description: Legal name
          example: John Doe Inc
        officialRegistration:
          type: string
          description: Official registration
          example: 404.484.060
        vatNumber:
          type: string
          description: VAT number
          example: "41199698"
        establishmentDate:
          type: string
          description: Establishment date
          format: date
        legalEntity:
          description: Legal entity
          $ref: '#/components/schemas/EnumValue'
        taxLiability:
          description: Tax liability
          $ref: '#/components/schemas/EnumValue'
        customerState:
          description: The state of the customer
          $ref: '#/components/schemas/EnumValue'
        individualPerson:
          description: Individual person of customer
          $ref: '#/components/schemas/M2MIndividualPerson'
        phoneNumbers:
          type: array
          description: A list of phone numbers
          items:
            $ref: '#/components/schemas/PhoneNumber'
        addresses:
          type: array
          description: A list of customer contact addresses
          items:
            $ref: '#/components/schemas/ContactAddress'
        internetReferences:
          type: array
          description: A list of internet references
          items:
            $ref: '#/components/schemas/InternetReference'
        sectorCodeInfo:
          description: Sector code information
          $ref: '#/components/schemas/SectorCodeInfo'
        dynamicAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DynamicAttributeValue'
          description: A map of dynamic attributes
        companyGroupReference:
          type: string
          description: Internal company code
          example: "1234"
        carFleetSize:
          type: integer
          description: Car fleet size
          format: int32
          example: 20
        commercialFleetSize:
          type: integer
          description: Commercial fleet size
          format: int32
          example: 15
        knowYourCustomerSource:
          description: The enumeration value that identifies how the leasing company
            got into contact with the prospect/customer
          $ref: '#/components/schemas/EnumValue'
        reference:
          type: string
          description: Business partner reference
          example: "100001"
        customerReference:
          type: string
          description: Customer reference
          example: "100002"
        leasingCompanies:
          type: array
          description: The list of the leasing companies
          items:
            $ref: '#/components/schemas/LeasingCompanyReference'
        languageId:
          type: string
          description: The ID of the language of the contact
          example: "123"
        communicationMedium:
          description: Communication medium
          $ref: '#/components/schemas/EnumValue'
        lastModified:
          type: string
          description: The date on which the customer was last modified
          format: date-time
    M2MIndividualPerson:
      type: object
      properties:
        personId:
          type: string
          description: ID of the person
          example: "100099"
        firstName:
          type: string
          description: First name of the person
          example: John
        middleName:
          type: string
          description: Middle name of the person
          example: Fraser
        lastName:
          type: string
          description: Last name of the person
          example: Doe
        secondLastName:
          type: string
          description: Second last name
          example: Doedoe
        maidenName:
          type: string
          description: Maiden name of the person
          example: Dane
        maidenMiddleName:
          type: string
          description: Maiden middle name of the person
          example: Ronald
        maidenSecondLastName:
          type: string
          description: Maiden second last name of the person
          example: McDonald
        initials:
          type: string
          description: Initials of the person
          example: J.D.
        gender:
          description: Gender
          $ref: '#/components/schemas/EnumValue'
        birthDate:
          type: string
          description: Birth date
          format: date
        personTitle:
          description: Person title
          $ref: '#/components/schemas/EnumValue'
        officialRegistration:
          type: string
          description: Official registration
          example: 20009280 0000
        countryOfBirth:
          description: The country of birth
          $ref: '#/components/schemas/Country'
        residencyStatus:
          description: Residency Status
          $ref: '#/components/schemas/EnumValue'
        housingTenure:
          description: The housing tenure of the person
          $ref: '#/components/schemas/EnumValue'
        dynamicAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DynamicAttributeValue'
          description: A map of dynamic attributes
        communicationMeduim:
          description: Deprecated since 2023-02-01 and version '1.75.5' in favor of
            'communicationMedium
          $ref: '#/components/schemas/EnumValue'
        communicationMedium:
          description: "Deprecated since '1.95.0' in favor of 'communicationMedium'\
            \ on the 'GET /customers/{customer_id}' endpoint"
          $ref: '#/components/schemas/EnumValue'
        countryId:
          type: string
          description: Country ID
          example: "159"
        placeOfBirth:
          type: string
          description: Place of birth
          example: Germany
        deathDate:
          type: string
          description: Death date
          format: date
        fullName:
          type: string
          description: Full name
          example: John Miles Dane Doe Doedoe
      description: Individual person of customer
    RetailCustomer:
      type: object
      properties:
        customerId:
          type: string
          description: The ID of the customer
          example: "41199698"
        tradingName:
          type: string
          description: Trading name
          example: John Doe Inc
        officialRegistration:
          type: string
          description: Official registration
          example: 404.484.060
        vatNumber:
          type: string
          description: VAT number
          example: "41199698"
        legalEntity:
          description: Legal entity
          $ref: '#/components/schemas/EnumValue'
        language:
          description: Language
          $ref: '#/components/schemas/Language'
        individualPerson:
          description: Individual person of customer
          $ref: '#/components/schemas/IndividualPerson'
        phoneNumbers:
          type: array
          description: A list of phone numbers
          items:
            $ref: '#/components/schemas/PhoneNumber'
        addresses:
          type: array
          description: A list of customer contact addresses
          items:
            $ref: '#/components/schemas/ContactAddress'
        internetReferences:
          type: array
          description: A list of internet references
          items:
            $ref: '#/components/schemas/InternetReference'
        dynamicAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DynamicAttributeValue'
          description: A map of dynamic attributes
      description: The retail customer
    CreateRetailCustomerRequest:
      required:
      - addresses
      - individualPerson
      - internetReferences
      - legalEntity
      type: object
      properties:
        name:
          type: string
          description: "The company name. This property is optional for individual\
            \ retail customers, but required for non individual retail customers such\
            \ as Organization"
          example: Company Co
        officialRegistration:
          type: string
          description: Official registration
          example: 20009280 0000
        vatNumber:
          type: string
          description: VAT number
          example: BE1234567891
        legalEntity:
          description: Legal entity
          $ref: '#/components/schemas/EnumValue'
        individualPerson:
          description: "Individual Person, required when legal entity is an individual\
            \ or sole trader"
          $ref: '#/components/schemas/IndividualPersonRequest'
        addresses:
          type: array
          description: A list of addresses
          items:
            $ref: '#/components/schemas/AddressRequest'
        phoneNumbers:
          type: array
          description: A list of phone numbers
          items:
            $ref: '#/components/schemas/PhoneNumberRequest'
        internetReferences:
          type: array
          description: A list of internet references
          items:
            $ref: '#/components/schemas/InternetReferenceRequest'
    RetailCustomerUpdateRestrictionsResponse:
      type: object
      properties:
        isUpdateRestricted:
          type: boolean
          description: "Indicates whether a retail customer can be updated. If there\
            \ is an active data change request for the retail customer, then it will\
            \ not be possible to update the retail customer until the active data\
            \ change request has been handled."
        retailCustomerId:
          type: string
          description: The ID of the retail customer
          example: "4652002"
    UpdateRetailCustomerResponse:
      type: object
      properties:
        retailCustomer:
          description: The retail customer
          $ref: '#/components/schemas/RetailCustomer'
        isUpdateRestricted:
          type: boolean
          description: Indicates whether the update is restricted or not
          example: false
        followUpCaseId:
          type: string
          description: The ID of the ticket that was created to follow this customer
            update request
          example: "1234567"
    UpdateIndividualRetailCustomerPersonRequest:
      required:
      - lastName
      - personId
      type: object
      properties:
        personId:
          type: string
          description: ID of the person
          example: "100099"
        firstName:
          type: string
          description: First name
          example: John
        middleName:
          type: string
          description: Middle name
          example: Fraser
        lastName:
          type: string
          description: Last name
          example: Doe
        birthDate:
          type: string
          description: Birth date
          format: date
        gender:
          description: Gender
          $ref: '#/components/schemas/SimpleEnumValue'
        personTitle:
          description: Person title
          $ref: '#/components/schemas/SimpleEnumValue'
      description: Individual person of the retail customer
    UpdateRetailCustomerRequest:
      required:
      - legalEntity
      type: object
      properties:
        vatNumber:
          type: string
          description: The VAT number of the retail customer
          example: "41199698"
        name:
          type: string
          description: The trading name of the retail customer
          example: Empire
        officialRegistration:
          type: string
          description: Official registration of the retail customer
          example: 404.484.060
        legalEntity:
          description: The legal entity of the retail customer
          $ref: '#/components/schemas/SimpleEnumValue'
        individualPerson:
          description: Individual person of the retail customer
          $ref: '#/components/schemas/UpdateIndividualRetailCustomerPersonRequest'
        phoneNumbers:
          type: array
          description: A list of phone numbers
          items:
            $ref: '#/components/schemas/PhoneNumberUpdateRequest'
        addresses:
          type: array
          description: A list of addresses
          items:
            $ref: '#/components/schemas/ContactAddressUpdateRequest'
        internetReferences:
          type: array
          description: A list of internet references
          items:
            $ref: '#/components/schemas/InternetReferenceUpdateRequest'
  securitySchemes:
    Roles:
      type: openIdConnect
      description: "Users need to have certain roles to be able to access certain\
        \ API endpoints. If there are no roles defined for the endpoint, * is shown.\
        \ This means that every authorized user has access to the endpoint."
      openIdConnectUrl: ""
